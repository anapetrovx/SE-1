

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec  5 21:01:05 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F886 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     000E                     	;# 
    90     000F                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001B                     	;# 
   105     001C                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     0087                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0009                     	;# 
   236     000A                     	;# 
   237     000B                     	;# 
   238     000C                     	;# 
   239     000D                     	;# 
   240     000E                     	;# 
   241     000E                     	;# 
   242     000F                     	;# 
   243     0010                     	;# 
   244     0011                     	;# 
   245     0012                     	;# 
   246     0013                     	;# 
   247     0014                     	;# 
   248     0015                     	;# 
   249     0015                     	;# 
   250     0016                     	;# 
   251     0017                     	;# 
   252     0018                     	;# 
   253     0019                     	;# 
   254     001A                     	;# 
   255     001B                     	;# 
   256     001B                     	;# 
   257     001C                     	;# 
   258     001D                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     0081                     	;# 
   262     0085                     	;# 
   263     0086                     	;# 
   264     0087                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     000D                     	;# 
   316     000E                     	;# 
   317     000E                     	;# 
   318     000F                     	;# 
   319     0010                     	;# 
   320     0011                     	;# 
   321     0012                     	;# 
   322     0013                     	;# 
   323     0014                     	;# 
   324     0015                     	;# 
   325     0015                     	;# 
   326     0016                     	;# 
   327     0017                     	;# 
   328     0018                     	;# 
   329     0019                     	;# 
   330     001A                     	;# 
   331     001B                     	;# 
   332     001B                     	;# 
   333     001C                     	;# 
   334     001D                     	;# 
   335     001E                     	;# 
   336     001F                     	;# 
   337     0081                     	;# 
   338     0085                     	;# 
   339     0086                     	;# 
   340     0087                     	;# 
   341     0089                     	;# 
   342     008C                     	;# 
   343     008D                     	;# 
   344     008E                     	;# 
   345     008F                     	;# 
   346     0090                     	;# 
   347     0091                     	;# 
   348     0092                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0094                     	;# 
   353     0095                     	;# 
   354     0096                     	;# 
   355     0097                     	;# 
   356     0098                     	;# 
   357     0099                     	;# 
   358     009A                     	;# 
   359     009B                     	;# 
   360     009C                     	;# 
   361     009D                     	;# 
   362     009E                     	;# 
   363     009F                     	;# 
   364     0105                     	;# 
   365     0107                     	;# 
   366     0108                     	;# 
   367     0109                     	;# 
   368     010C                     	;# 
   369     010C                     	;# 
   370     010D                     	;# 
   371     010E                     	;# 
   372     010F                     	;# 
   373     0185                     	;# 
   374     0187                     	;# 
   375     0188                     	;# 
   376     0189                     	;# 
   377     018C                     	;# 
   378     018D                     	;# 
   379     0000                     	;# 
   380     0001                     	;# 
   381     0002                     	;# 
   382     0003                     	;# 
   383     0004                     	;# 
   384     0005                     	;# 
   385     0006                     	;# 
   386     0007                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0089                     	;# 
   418     008C                     	;# 
   419     008D                     	;# 
   420     008E                     	;# 
   421     008F                     	;# 
   422     0090                     	;# 
   423     0091                     	;# 
   424     0092                     	;# 
   425     0093                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0094                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009C                     	;# 
   437     009D                     	;# 
   438     009E                     	;# 
   439     009F                     	;# 
   440     0105                     	;# 
   441     0107                     	;# 
   442     0108                     	;# 
   443     0109                     	;# 
   444     010C                     	;# 
   445     010C                     	;# 
   446     010D                     	;# 
   447     010E                     	;# 
   448     010F                     	;# 
   449     0185                     	;# 
   450     0187                     	;# 
   451     0188                     	;# 
   452     0189                     	;# 
   453     018C                     	;# 
   454     018D                     	;# 
   455     0000                     	;# 
   456     0001                     	;# 
   457     0002                     	;# 
   458     0003                     	;# 
   459     0004                     	;# 
   460     0005                     	;# 
   461     0006                     	;# 
   462     0007                     	;# 
   463     0009                     	;# 
   464     000A                     	;# 
   465     000B                     	;# 
   466     000C                     	;# 
   467     000D                     	;# 
   468     000E                     	;# 
   469     000E                     	;# 
   470     000F                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0014                     	;# 
   476     0015                     	;# 
   477     0015                     	;# 
   478     0016                     	;# 
   479     0017                     	;# 
   480     0018                     	;# 
   481     0019                     	;# 
   482     001A                     	;# 
   483     001B                     	;# 
   484     001B                     	;# 
   485     001C                     	;# 
   486     001D                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     0081                     	;# 
   490     0085                     	;# 
   491     0086                     	;# 
   492     0087                     	;# 
   493     0089                     	;# 
   494     008C                     	;# 
   495     008D                     	;# 
   496     008E                     	;# 
   497     008F                     	;# 
   498     0090                     	;# 
   499     0091                     	;# 
   500     0092                     	;# 
   501     0093                     	;# 
   502     0093                     	;# 
   503     0093                     	;# 
   504     0094                     	;# 
   505     0095                     	;# 
   506     0096                     	;# 
   507     0097                     	;# 
   508     0098                     	;# 
   509     0099                     	;# 
   510     009A                     	;# 
   511     009B                     	;# 
   512     009C                     	;# 
   513     009D                     	;# 
   514     009E                     	;# 
   515     009F                     	;# 
   516     0105                     	;# 
   517     0107                     	;# 
   518     0108                     	;# 
   519     0109                     	;# 
   520     010C                     	;# 
   521     010C                     	;# 
   522     010D                     	;# 
   523     010E                     	;# 
   524     010F                     	;# 
   525     0185                     	;# 
   526     0187                     	;# 
   527     0188                     	;# 
   528     0189                     	;# 
   529     018C                     	;# 
   530     018D                     	;# 
   531                           
   532                           	psect	idataCOMMON
   533     0312                     __pidataCOMMON:
   534                           
   535                           ;initializer for _adc_ready
   536     0312  3401               	retlw	1
   537     001E                     _ADRESH	set	30
   538     000F                     _TMR1H	set	15
   539     000E                     _TMR1L	set	14
   540     0010                     _T1CONbits	set	16
   541     0001                     _TMR0	set	1
   542     000B                     _INTCONbits	set	11
   543     001F                     _ADCON0bits	set	31
   544     000C                     _PIR1bits	set	12
   545     009E                     _ADRESL	set	158
   546     0081                     _OPTION_REGbits	set	129
   547     008C                     _PIE1bits	set	140
   548     009F                     _ADCON1bits	set	159
   549     0085                     _TRISAbits	set	133
   550     0188                     _ANSELbits	set	392
   551                           
   552                           	psect	cinit
   553     0013                     start_initialization:	
   554                           ; #config settings
   555                           
   556     0013                     __initialization:
   557                           
   558                           ; Initialize objects allocated to COMMON
   559     0013  120A  118A  2312  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   560     0018  00FD               	movwf	__pdataCOMMON& (0+127)
   561                           
   562                           ; Clear objects allocated to BANK0
   563     0019  1383               	bcf	3,7	;select IRP bank0
   564     001A  3020               	movlw	low __pbssBANK0
   565     001B  0084               	movwf	4
   566     001C  304E               	movlw	low (__pbssBANK0+46)
   567     001D  120A  118A  22DA  120A  118A  	fcall	clear_ram0
   568                           
   569                           ; Clear objects allocated to COMMON
   570     0022  01FC               	clrf	__pbssCOMMON& (0+127)
   571     0023                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574     0023                     __end_of__initialization:
   575     0023  0183               	clrf	3
   576     0024  120A  118A  2836   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssCOMMON
   579     007C                     __pbssCOMMON:
   580     007C                     _adc_current_task:
   581     007C                     	ds	1
   582                           
   583                           	psect	dataCOMMON
   584     007D                     __pdataCOMMON:
   585     007D                     _adc_ready:
   586     007D                     	ds	1
   587                           
   588                           	psect	bssBANK0
   589     0020                     __pbssBANK0:
   590     0020                     _max_noise:
   591     0020                     	ds	2
   592     0022                     _temperature:
   593     0022                     	ds	2
   594     0024                     _humidity:
   595     0024                     	ds	2
   596     0026                     _task_array:
   597     0026                     	ds	40
   598                           
   599                           	psect	clrtext
   600     02DA                     clear_ram0:	
   601                           ;	Called with FSR containing the base address, and
   602                           ;	W with the last address+1
   603                           
   604     02DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   605     02DB                     clrloop0:
   606     02DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   607     02DC  0A84               	incf	4,f	;increment pointer
   608     02DD  0604               	xorwf	4,w	;XOR with final address
   609     02DE  1903               	btfsc	3,2	;have we reached the end yet?
   610     02DF  3400               	retlw	0	;all done for this memory range, return
   611     02E0  0604               	xorwf	4,w	;XOR again to restore value
   612     02E1  2ADB               	goto	clrloop0	;do the next byte
   613                           
   614                           	psect	cstackCOMMON
   615     0070                     __pcstackCOMMON:
   616     0070                     ?_ISR_ADC_lecture_ready:
   617     0070                     ?_initHardware:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_readNoise:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_readTemperature:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_readHumidity:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_MAIN_ISR:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_main:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?_taskData_getADC_ready:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_taskData_setADC_ready:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_taskData_set_ADC_CurrentTask:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_taskData_get_ADC_CurrentTask:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ??_taskData_get_ADC_CurrentTask:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_taskData_set_Humidity:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_taskData_set_Temperature:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_taskData_set_MaxNoise:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?_initADCmodule:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_initTIMER1module:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?i1_taskData_setADC_ready:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ??i1_taskData_setADC_ready:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?i1___bmul:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_taskData_get_MaxNoise:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     i1taskData_setADC_ready@value:	
   678                           ; 2 bytes @ 0x0
   679                           
   680     0070                     i1___bmul@multiplicand:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     taskData_set_Humidity@value:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     taskData_set_Temperature@value:	
   687                           ; 2 bytes @ 0x0
   688                           
   689     0070                     taskData_set_MaxNoise@value:	
   690                           ; 2 bytes @ 0x0
   691                           
   692                           
   693                           ; 2 bytes @ 0x0
   694     0070                     	ds	1
   695     0071                     ??i1___bmul:
   696                           
   697                           ; 1 bytes @ 0x1
   698     0071                     	ds	1
   699     0072                     ??_ISR_ADC_lecture_ready:
   700     0072                     ??_taskData_set_Humidity:	
   701                           ; 1 bytes @ 0x2
   702                           
   703     0072                     ??_taskData_set_Temperature:	
   704                           ; 1 bytes @ 0x2
   705                           
   706     0072                     ??_taskData_get_MaxNoise:	
   707                           ; 1 bytes @ 0x2
   708                           
   709     0072                     ??_taskData_set_MaxNoise:	
   710                           ; 1 bytes @ 0x2
   711                           
   712     0072                     i1___bmul@product:	
   713                           ; 1 bytes @ 0x2
   714                           
   715                           
   716                           ; 1 bytes @ 0x2
   717     0072                     	ds	1
   718     0073                     i1___bmul@multiplier:
   719                           
   720                           ; 1 bytes @ 0x3
   721     0073                     	ds	1
   722     0074                     ?_ISR_periodic_interrupt:
   723     0074                     ISR_periodic_interrupt@task_amount:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 1 bytes @ 0x4
   728     0074                     	ds	1
   729     0075                     ??_ISR_periodic_interrupt:
   730                           
   731                           ; 1 bytes @ 0x5
   732     0075                     	ds	1
   733     0076                     ISR_periodic_interrupt@task_array:
   734     0076                     ISR_ADC_lecture_ready@lecture:	
   735                           ; 1 bytes @ 0x6
   736                           
   737                           
   738                           ; 2 bytes @ 0x6
   739     0076                     	ds	1
   740     0077                     ISR_periodic_interrupt@i:
   741                           
   742                           ; 1 bytes @ 0x7
   743     0077                     	ds	1
   744     0078                     ??_MAIN_ISR:
   745                           
   746                           ; 1 bytes @ 0x8
   747     0078                     	ds	4
   748                           
   749                           	psect	cstackBANK0
   750     004E                     __pcstackBANK0:
   751     004E                     ??_initHardware:
   752     004E                     ??_taskData_getADC_ready:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     004E                     ??_taskData_setADC_ready:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     004E                     ??_taskData_set_ADC_CurrentTask:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     004E                     ??_initADCmodule:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     004E                     ??_initTIMER1module:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     004E                     ?___bmul:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     004E                     ?_create_task:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     004E                     taskData_setADC_ready@value:	
   774                           ; 5 bytes @ 0x0
   775                           
   776     004E                     taskData_set_ADC_CurrentTask@value:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     004E                     ___bmul@multiplicand:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     004E                     create_task@ticks_period:	
   783                           ; 1 bytes @ 0x0
   784                           
   785                           
   786                           ; 2 bytes @ 0x0
   787     004E                     	ds	1
   788     004F                     ??_readNoise:
   789     004F                     ??_readTemperature:	
   790                           ; 1 bytes @ 0x1
   791                           
   792     004F                     ??_readHumidity:	
   793                           ; 1 bytes @ 0x1
   794                           
   795     004F                     ??___bmul:	
   796                           ; 1 bytes @ 0x1
   797                           
   798                           
   799                           ; 1 bytes @ 0x1
   800     004F                     	ds	1
   801     0050                     create_task@run:
   802     0050                     ___bmul@product:	
   803                           ; 1 bytes @ 0x2
   804                           
   805                           
   806                           ; 1 bytes @ 0x2
   807     0050                     	ds	1
   808     0051                     ___bmul@multiplier:
   809                           
   810                           ; 1 bytes @ 0x3
   811     0051                     	ds	2
   812     0053                     ??_create_task:
   813     0053                     create_task@to_create:	
   814                           ; 1 bytes @ 0x5
   815                           
   816                           
   817                           ; 5 bytes @ 0x5
   818     0053                     	ds	5
   819     0058                     ??_main:
   820                           
   821                           ; 1 bytes @ 0xA
   822     0058                     	ds	4
   823     005C                     main@i:
   824                           
   825                           ; 1 bytes @ 0xE
   826     005C                     	ds	1
   827                           
   828                           	psect	maintext
   829     0036                     __pmaintext:	
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 24 in file "main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  i               1   14[BANK0 ] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : B00/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       1       0       0       0
   851 ;;      Temps:          0       4       0       0       0
   852 ;;      Totals:         0       5       0       0       0
   853 ;;Total ram usage:        5 bytes
   854 ;; Hardware stack levels required when called: 5
   855 ;; This function calls:
   856 ;;		___bmul
   857 ;;		_create_task
   858 ;;		_initHardware
   859 ;;		_readHumidity
   860 ;;		_readNoise
   861 ;;		_readTemperature
   862 ;; This function is called by:
   863 ;;		Startup code after reset
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867     0036                     _main:	
   868                           ;psect for function _main
   869                           
   870     0036                     l1144:	
   871                           ;incstack = 0
   872                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   873                           
   874                           
   875                           ;main.c: 25:     initHardware();
   876     0036  120A  118A  22CD  120A  118A  	fcall	_initHardware
   877     003B                     l1146:
   878                           
   879                           ;main.c: 30:     task_array[0] = create_task(1,readNoise);
   880     003B  3001               	movlw	1
   881     003C  1283               	bcf	3,5	;RP0=0, select bank0
   882     003D  1303               	bcf	3,6	;RP1=0, select bank0
   883     003E  00CE               	movwf	create_task@ticks_period
   884     003F  3000               	movlw	0
   885     0040  00CF               	movwf	create_task@ticks_period+1
   886     0041  3004               	movlw	(low (fp__readNoise-fpbase))& (0+255)
   887     0042  00D0               	movwf	create_task@run
   888     0043  120A  118A  226F  120A  118A  	fcall	_create_task
   889     0048  3026               	movlw	_task_array& (0+255)
   890     0049  0084               	movwf	4
   891     004A  1283               	bcf	3,5	;RP0=0, select bank0
   892     004B  1303               	bcf	3,6	;RP1=0, select bank0
   893     004C  084E               	movf	?_create_task,w
   894     004D  1383               	bcf	3,7	;select IRP bank0
   895     004E  0080               	movwf	0
   896     004F  0A84               	incf	4,f
   897     0050  084F               	movf	?_create_task+1,w
   898     0051  0080               	movwf	0
   899     0052  0A84               	incf	4,f
   900     0053  0850               	movf	?_create_task+2,w
   901     0054  0080               	movwf	0
   902     0055  0A84               	incf	4,f
   903     0056  0851               	movf	?_create_task+3,w
   904     0057  0080               	movwf	0
   905     0058  0A84               	incf	4,f
   906     0059  0852               	movf	?_create_task+4,w
   907     005A  0080               	movwf	0
   908     005B                     l1148:
   909                           
   910                           ;main.c: 32:     task_array[1] = create_task(500,readTemperature);
   911     005B  30F4               	movlw	244
   912     005C  00CE               	movwf	create_task@ticks_period
   913     005D  3001               	movlw	1
   914     005E  00CF               	movwf	create_task@ticks_period+1
   915     005F  3001               	movlw	(low (fp__readTemperature-fpbase))& (0+255)
   916     0060  00D0               	movwf	create_task@run
   917     0061  120A  118A  226F  120A  118A  	fcall	_create_task
   918     0066  1283               	bcf	3,5	;RP0=0, select bank0
   919     0067  1303               	bcf	3,6	;RP1=0, select bank0
   920     0068  304E               	movlw	?_create_task& (0+255)
   921     0069  0084               	movwf	4
   922     006A  3005               	movlw	5
   923     006B  3E26               	addlw	(low (_task_array| 0))& (0+255)
   924     006C  00D8               	movwf	??_main
   925     006D  3005               	movlw	5
   926     006E  00D9               	movwf	??_main+1
   927     006F                     u330:
   928     006F  1383               	bcf	3,7	;select IRP bank0
   929     0070  0800               	movf	0,w
   930     0071  00DA               	movwf	??_main+2
   931     0072  0A04               	incf	4,w
   932     0073  00DB               	movwf	??_main+3
   933     0074  0858               	movf	??_main,w
   934     0075  0084               	movwf	4
   935     0076  085A               	movf	??_main+2,w
   936     0077  0080               	movwf	0
   937     0078  0A04               	incf	4,w
   938     0079  00D8               	movwf	??_main
   939     007A  085B               	movf	??_main+3,w
   940     007B  0084               	movwf	4
   941     007C  0BD9               	decfsz	??_main+1,f
   942     007D  286F               	goto	u330
   943     007E                     l1150:
   944                           
   945                           ;main.c: 33:     task_array[2] = create_task(500,readHumidity);
   946     007E  30F4               	movlw	244
   947     007F  00CE               	movwf	create_task@ticks_period
   948     0080  3001               	movlw	1
   949     0081  00CF               	movwf	create_task@ticks_period+1
   950     0082  3007               	movlw	(low (fp__readHumidity-fpbase))& (0+255)
   951     0083  00D0               	movwf	create_task@run
   952     0084  120A  118A  226F  120A  118A  	fcall	_create_task
   953     0089  1283               	bcf	3,5	;RP0=0, select bank0
   954     008A  1303               	bcf	3,6	;RP1=0, select bank0
   955     008B  304E               	movlw	?_create_task& (0+255)
   956     008C  0084               	movwf	4
   957     008D  300A               	movlw	10
   958     008E  3E26               	addlw	(low (_task_array| 0))& (0+255)
   959     008F  00D8               	movwf	??_main
   960     0090  3005               	movlw	5
   961     0091  00D9               	movwf	??_main+1
   962     0092                     u340:
   963     0092  1383               	bcf	3,7	;select IRP bank0
   964     0093  0800               	movf	0,w
   965     0094  00DA               	movwf	??_main+2
   966     0095  0A04               	incf	4,w
   967     0096  00DB               	movwf	??_main+3
   968     0097  0858               	movf	??_main,w
   969     0098  0084               	movwf	4
   970     0099  085A               	movf	??_main+2,w
   971     009A  0080               	movwf	0
   972     009B  0A04               	incf	4,w
   973     009C  00D8               	movwf	??_main
   974     009D  085B               	movf	??_main+3,w
   975     009E  0084               	movwf	4
   976     009F  0BD9               	decfsz	??_main+1,f
   977     00A0  2892               	goto	u340
   978     00A1                     l1152:
   979                           
   980                           ;main.c: 45:         for(char i = 0; i < 3; i++){
   981     00A1  01DC               	clrf	main@i
   982     00A2                     l1158:
   983                           
   984                           ;main.c: 46:             if(task_array[i].ticks_left <= 0){
   985     00A2  3005               	movlw	5
   986     00A3  00CE               	movwf	___bmul@multiplicand
   987     00A4  085C               	movf	main@i,w
   988     00A5  120A  118A  228D  120A  118A  	fcall	___bmul
   989     00AA  3E26               	addlw	(low (_task_array| 0))& (0+255)
   990     00AB  0084               	movwf	4
   991     00AC  1383               	bcf	3,7	;select IRP bank0
   992     00AD  0800               	movf	0,w
   993     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   994     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   995     00B0  00D8               	movwf	??_main
   996     00B1  0A84               	incf	4,f
   997     00B2  0800               	movf	0,w
   998     00B3  00D9               	movwf	??_main+1
   999     00B4  0859               	movf	??_main+1,w
  1000     00B5  3A80               	xorlw	128
  1001     00B6  00FF               	movwf	btemp+1
  1002     00B7  3080               	movlw	128
  1003     00B8  027F               	subwf	btemp+1,w
  1004     00B9  1D03               	skipz
  1005     00BA  28BD               	goto	u355
  1006     00BB  3001               	movlw	1
  1007     00BC  0258               	subwf	??_main,w
  1008     00BD                     u355:
  1009     00BD  1803               	skipnc
  1010     00BE  28C0               	goto	u351
  1011     00BF  28C1               	goto	u350
  1012     00C0                     u351:
  1013     00C0  28FA               	goto	l1162
  1014     00C1                     u350:
  1015     00C1                     l1160:
  1016                           
  1017                           ;main.c: 47:                 task_array[i].run();
  1018     00C1  3005               	movlw	5
  1019     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1020     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1021     00C4  00CE               	movwf	___bmul@multiplicand
  1022     00C5  085C               	movf	main@i,w
  1023     00C6  120A  118A  228D  120A  118A  	fcall	___bmul
  1024     00CB  3E2A               	addlw	(low ((_task_array| 0+4)))& (0+255)
  1025     00CC  0084               	movwf	4
  1026     00CD  1383               	bcf	3,7	;select IRP bank0
  1027     00CE  0800               	movf	0,w
  1028     00CF  120A  118A  2027  120A  118A  	fcall	fptable
  1029                           
  1030                           ;main.c: 48:                 task_array[i].ticks_left = task_array[i].ticks_period;
  1031     00D4  3005               	movlw	5
  1032     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1033     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1034     00D7  00CE               	movwf	___bmul@multiplicand
  1035     00D8  085C               	movf	main@i,w
  1036     00D9  120A  118A  228D  120A  118A  	fcall	___bmul
  1037     00DE  3E28               	addlw	(low ((_task_array| 0+2)))& (0+255)
  1038     00DF  0084               	movwf	4
  1039     00E0  1383               	bcf	3,7	;select IRP bank0
  1040     00E1  0800               	movf	0,w
  1041     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1042     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1043     00E4  00D8               	movwf	??_main
  1044     00E5  0A84               	incf	4,f
  1045     00E6  0800               	movf	0,w
  1046     00E7  00D9               	movwf	??_main+1
  1047     00E8  3005               	movlw	5
  1048     00E9  00CE               	movwf	___bmul@multiplicand
  1049     00EA  085C               	movf	main@i,w
  1050     00EB  120A  118A  228D  120A  118A  	fcall	___bmul
  1051     00F0  3E26               	addlw	(low (_task_array| 0))& (0+255)
  1052     00F1  0084               	movwf	4
  1053     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1054     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1055     00F4  0858               	movf	??_main,w
  1056     00F5  1383               	bcf	3,7	;select IRP bank0
  1057     00F6  0080               	movwf	0
  1058     00F7  0A84               	incf	4,f
  1059     00F8  0859               	movf	??_main+1,w
  1060     00F9  0080               	movwf	0
  1061     00FA                     l1162:
  1062                           
  1063                           ;main.c: 50:         }
  1064     00FA  3001               	movlw	1
  1065     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1066     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1067     00FD  00D8               	movwf	??_main
  1068     00FE  0858               	movf	??_main,w
  1069     00FF  07DC               	addwf	main@i,f
  1070     0100                     l1164:
  1071     0100  3003               	movlw	3
  1072     0101  025C               	subwf	main@i,w
  1073     0102  1C03               	skipc
  1074     0103  2905               	goto	u361
  1075     0104  2906               	goto	u360
  1076     0105                     u361:
  1077     0105  28A2               	goto	l1158
  1078     0106                     u360:
  1079     0106  28A1               	goto	l1152
  1080     0107  120A  118A  2810   	ljmp	start
  1081     010A                     __end_of_main:
  1082                           
  1083                           	psect	text1
  1084     0202                     __ptext1:	
  1085 ;; *************** function _readHumidity *****************
  1086 ;; Defined at:
  1087 ;;		line 4 in file "tasks.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 4
  1108 ;; This function calls:
  1109 ;;		_taskData_getADC_ready
  1110 ;;		_taskData_setADC_ready
  1111 ;;		_taskData_set_ADC_CurrentTask
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117     0202                     _readHumidity:	
  1118                           ;psect for function _readHumidity
  1119                           
  1120     0202                     l1094:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _readHumidity: [wreg+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;tasks.c: 5:     ADCON0bits.CHS = 0b0000;
  1126     0202  30C3               	movlw	-61
  1127     0203  1283               	bcf	3,5	;RP0=0, select bank0
  1128     0204  1303               	bcf	3,6	;RP1=0, select bank0
  1129     0205  059F               	andwf	31,f	;volatile
  1130     0206                     l1096:	
  1131                           ;tasks.c: 7:     while(taskData_getADC_ready() == 0);
  1132                           
  1133     0206  120A  118A  230E  120A  118A  	fcall	_taskData_getADC_ready
  1134     020B  3A00               	xorlw	0
  1135     020C  1903               	skipnz
  1136     020D  2A0F               	goto	u231
  1137     020E  2A10               	goto	u230
  1138     020F                     u231:
  1139     020F  2A06               	goto	l1096
  1140     0210                     u230:
  1141     0210                     l1098:
  1142                           
  1143                           ;tasks.c: 8:     taskData_setADC_ready(0);
  1144     0210  3000               	movlw	0
  1145     0211  120A  118A  2304  120A  118A  	fcall	_taskData_setADC_ready
  1146                           
  1147                           ;tasks.c: 9:     taskData_set_ADC_CurrentTask(0);
  1148     0216  3000               	movlw	0
  1149     0217  120A  118A  22FE  120A  118A  	fcall	_taskData_set_ADC_CurrentTask
  1150     021C                     l1100:
  1151                           
  1152                           ;tasks.c: 11:     INTCONbits.T0IF = 0;
  1153     021C  110B               	bcf	11,2	;volatile
  1154     021D                     l1102:
  1155                           
  1156                           ;tasks.c: 12:     TMR0 = 231;
  1157     021D  30E7               	movlw	231
  1158     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1159     021F  1303               	bcf	3,6	;RP1=0, select bank0
  1160     0220  0081               	movwf	1	;volatile
  1161     0221                     l89:	
  1162                           ;tasks.c: 13:     while(INTCONbits.T0IF == 0);
  1163                           
  1164     0221  1D0B               	btfss	11,2	;volatile
  1165     0222  2A24               	goto	u241
  1166     0223  2A25               	goto	u240
  1167     0224                     u241:
  1168     0224  2A21               	goto	l89
  1169     0225                     u240:
  1170     0225                     l91:
  1171                           
  1172                           ;tasks.c: 15:     ADCON0bits.GO=1;
  1173     0225  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0226  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0227  149F               	bsf	31,1	;volatile
  1176     0228                     l92:
  1177     0228  0008               	return
  1178     0229                     __end_of_readHumidity:
  1179                           
  1180                           	psect	text2
  1181     01B0                     __ptext2:	
  1182 ;; *************** function _readNoise *****************
  1183 ;; Defined at:
  1184 ;;		line 32 in file "tasks.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 4
  1205 ;; This function calls:
  1206 ;;		_taskData_getADC_ready
  1207 ;;		_taskData_setADC_ready
  1208 ;;		_taskData_set_ADC_CurrentTask
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214     01B0                     _readNoise:	
  1215                           ;psect for function _readNoise
  1216                           
  1217     01B0                     l1114:	
  1218                           ;incstack = 0
  1219                           ; Regs used in _readNoise: [wreg+status,2+status,0+pclath+cstack]
  1220                           
  1221                           
  1222                           ;tasks.c: 33:     ADCON0bits.CHS = 0b0010;
  1223     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1224     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1225     01B2  081F               	movf	31,w	;volatile
  1226     01B3  39C3               	andlw	-61
  1227     01B4  3808               	iorlw	8
  1228     01B5  009F               	movwf	31	;volatile
  1229     01B6                     l1116:	
  1230                           ;tasks.c: 35:     while(taskData_getADC_ready() == 0);
  1231                           
  1232     01B6  120A  118A  230E  120A  118A  	fcall	_taskData_getADC_ready
  1233     01BB  3A00               	xorlw	0
  1234     01BC  1903               	skipnz
  1235     01BD  29BF               	goto	u271
  1236     01BE  29C0               	goto	u270
  1237     01BF                     u271:
  1238     01BF  29B6               	goto	l1116
  1239     01C0                     u270:
  1240     01C0                     l1118:
  1241                           
  1242                           ;tasks.c: 36:     taskData_setADC_ready(0);
  1243     01C0  3000               	movlw	0
  1244     01C1  120A  118A  2304  120A  118A  	fcall	_taskData_setADC_ready
  1245                           
  1246                           ;tasks.c: 37:     taskData_set_ADC_CurrentTask(2);
  1247     01C6  3002               	movlw	2
  1248     01C7  120A  118A  22FE  120A  118A  	fcall	_taskData_set_ADC_CurrentTask
  1249     01CC                     l1120:
  1250                           
  1251                           ;tasks.c: 39:     INTCONbits.T0IF = 0;
  1252     01CC  110B               	bcf	11,2	;volatile
  1253     01CD                     l1122:
  1254                           
  1255                           ;tasks.c: 40:     TMR0 = 231;
  1256     01CD  30E7               	movlw	231
  1257     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1258     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1259     01D0  0081               	movwf	1	;volatile
  1260     01D1                     l107:	
  1261                           ;tasks.c: 41:     while(INTCONbits.T0IF == 0);
  1262                           
  1263     01D1  1D0B               	btfss	11,2	;volatile
  1264     01D2  29D4               	goto	u281
  1265     01D3  29D5               	goto	u280
  1266     01D4                     u281:
  1267     01D4  29D1               	goto	l107
  1268     01D5                     u280:
  1269     01D5                     l109:
  1270                           
  1271                           ;tasks.c: 43:     ADCON0bits.GO=1;
  1272     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1273     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1274     01D7  149F               	bsf	31,1	;volatile
  1275     01D8                     l110:
  1276     01D8  0008               	return
  1277     01D9                     __end_of_readNoise:
  1278                           
  1279                           	psect	text3
  1280     01D9                     __ptext3:	
  1281 ;; *************** function _readTemperature *****************
  1282 ;; Defined at:
  1283 ;;		line 18 in file "tasks.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 4
  1304 ;; This function calls:
  1305 ;;		_taskData_getADC_ready
  1306 ;;		_taskData_setADC_ready
  1307 ;;		_taskData_set_ADC_CurrentTask
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313     01D9                     _readTemperature:	
  1314                           ;psect for function _readTemperature
  1315                           
  1316     01D9                     l1104:	
  1317                           ;incstack = 0
  1318                           ; Regs used in _readTemperature: [wreg+status,2+status,0+pclath+cstack]
  1319                           
  1320                           
  1321                           ;tasks.c: 19:     ADCON0bits.CHS = 0b0001;
  1322     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1323     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1324     01DB  081F               	movf	31,w	;volatile
  1325     01DC  39C3               	andlw	-61
  1326     01DD  3804               	iorlw	4
  1327     01DE  009F               	movwf	31	;volatile
  1328     01DF                     l1106:	
  1329                           ;tasks.c: 21:     while(taskData_getADC_ready() == 0);
  1330                           
  1331     01DF  120A  118A  230E  120A  118A  	fcall	_taskData_getADC_ready
  1332     01E4  3A00               	xorlw	0
  1333     01E5  1903               	skipnz
  1334     01E6  29E8               	goto	u251
  1335     01E7  29E9               	goto	u250
  1336     01E8                     u251:
  1337     01E8  29DF               	goto	l1106
  1338     01E9                     u250:
  1339     01E9                     l1108:
  1340                           
  1341                           ;tasks.c: 22:     taskData_setADC_ready(0);
  1342     01E9  3000               	movlw	0
  1343     01EA  120A  118A  2304  120A  118A  	fcall	_taskData_setADC_ready
  1344                           
  1345                           ;tasks.c: 23:     taskData_set_ADC_CurrentTask(1);
  1346     01EF  3001               	movlw	1
  1347     01F0  120A  118A  22FE  120A  118A  	fcall	_taskData_set_ADC_CurrentTask
  1348     01F5                     l1110:
  1349                           
  1350                           ;tasks.c: 25:     INTCONbits.T0IF = 0;
  1351     01F5  110B               	bcf	11,2	;volatile
  1352     01F6                     l1112:
  1353                           
  1354                           ;tasks.c: 26:     TMR0 = 231;
  1355     01F6  30E7               	movlw	231
  1356     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1357     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1358     01F9  0081               	movwf	1	;volatile
  1359     01FA                     l98:	
  1360                           ;tasks.c: 27:     while(INTCONbits.T0IF == 0);
  1361                           
  1362     01FA  1D0B               	btfss	11,2	;volatile
  1363     01FB  29FD               	goto	u261
  1364     01FC  29FE               	goto	u260
  1365     01FD                     u261:
  1366     01FD  29FA               	goto	l98
  1367     01FE                     u260:
  1368     01FE                     l100:
  1369                           
  1370                           ;tasks.c: 29:     ADCON0bits.GO=1;
  1371     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1372     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1373     0200  149F               	bsf	31,1	;volatile
  1374     0201                     l101:
  1375     0201  0008               	return
  1376     0202                     __end_of_readTemperature:
  1377                           
  1378                           	psect	text4
  1379     02FE                     __ptext4:	
  1380 ;; *************** function _taskData_set_ADC_CurrentTask *****************
  1381 ;; Defined at:
  1382 ;;		line 15 in file "taskData.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  value           1    wreg     unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  value           1    0[BANK0 ] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         0       1       0       0       0
  1398 ;;      Temps:          0       0       0       0       0
  1399 ;;      Totals:         0       1       0       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 3
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_readHumidity
  1407 ;;		_readTemperature
  1408 ;;		_readNoise
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412     02FE                     _taskData_set_ADC_CurrentTask:	
  1413                           ;psect for function _taskData_set_ADC_CurrentTask
  1414                           
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _taskData_set_ADC_CurrentTask: [wreg]
  1418                           ;taskData_set_ADC_CurrentTask@value stored from wreg
  1419     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1420     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1421     0300  00CE               	movwf	taskData_set_ADC_CurrentTask@value
  1422     0301                     l986:
  1423                           
  1424                           ;taskData.c: 16:     adc_current_task = value;
  1425     0301  084E               	movf	taskData_set_ADC_CurrentTask@value,w
  1426     0302  00FC               	movwf	_adc_current_task
  1427     0303                     l56:
  1428     0303  0008               	return
  1429     0304                     __end_of_taskData_set_ADC_CurrentTask:
  1430                           
  1431                           	psect	text5
  1432     0304                     __ptext5:	
  1433 ;; *************** function _taskData_setADC_ready *****************
  1434 ;; Defined at:
  1435 ;;		line 12 in file "taskData.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  value           1    wreg     unsigned char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  value           1    0[BANK0 ] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         0       1       0       0       0
  1451 ;;      Temps:          0       0       0       0       0
  1452 ;;      Totals:         0       1       0       0       0
  1453 ;;Total ram usage:        1 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 3
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_readHumidity
  1460 ;;		_readTemperature
  1461 ;;		_readNoise
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465     0304                     _taskData_setADC_ready:	
  1466                           ;psect for function _taskData_setADC_ready
  1467                           
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _taskData_setADC_ready: [wreg]
  1471                           ;taskData_setADC_ready@value stored from wreg
  1472     0304  1283               	bcf	3,5	;RP0=0, select bank0
  1473     0305  1303               	bcf	3,6	;RP1=0, select bank0
  1474     0306  00CE               	movwf	taskData_setADC_ready@value
  1475     0307                     l984:
  1476                           
  1477                           ;taskData.c: 13:     adc_ready = value;
  1478     0307  084E               	movf	taskData_setADC_ready@value,w
  1479     0308  00FD               	movwf	_adc_ready
  1480     0309                     l53:
  1481     0309  0008               	return
  1482     030A                     __end_of_taskData_setADC_ready:
  1483                           
  1484                           	psect	text6
  1485     030E                     __ptext6:	
  1486 ;; *************** function _taskData_getADC_ready *****************
  1487 ;; Defined at:
  1488 ;;		line 9 in file "taskData.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 3
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_readHumidity
  1513 ;;		_readTemperature
  1514 ;;		_readNoise
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518     030E                     _taskData_getADC_ready:	
  1519                           ;psect for function _taskData_getADC_ready
  1520                           
  1521     030E                     l980:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _taskData_getADC_ready: [wreg]
  1524                           
  1525                           
  1526                           ;taskData.c: 10:     return adc_ready;
  1527     030E  087D               	movf	_adc_ready,w
  1528     030F                     l50:
  1529     030F  0008               	return
  1530     0310                     __end_of_taskData_getADC_ready:
  1531                           
  1532                           	psect	text7
  1533     02CD                     __ptext7:	
  1534 ;; *************** function _initHardware *****************
  1535 ;; Defined at:
  1536 ;;		line 44 in file "hardware.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 4
  1557 ;; This function calls:
  1558 ;;		_initADCmodule
  1559 ;;		_initTIMER1module
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565     02CD                     _initHardware:	
  1566                           ;psect for function _initHardware
  1567                           
  1568     02CD                     l1088:	
  1569                           ;incstack = 0
  1570                           ; Regs used in _initHardware: [wreg+status,2+status,0+pclath+cstack]
  1571                           
  1572                           
  1573                           ;hardware.c: 45:     initADCmodule();
  1574     02CD  120A  118A  2229  120A  118A  	fcall	_initADCmodule
  1575                           
  1576                           ;hardware.c: 46:     initTIMER1module();
  1577     02D2  120A  118A  22B9  120A  118A  	fcall	_initTIMER1module
  1578     02D7                     l1090:
  1579                           
  1580                           ;hardware.c: 48:     INTCONbits.PEIE = 1;
  1581     02D7  170B               	bsf	11,6	;volatile
  1582     02D8                     l1092:
  1583                           
  1584                           ;hardware.c: 49:     INTCONbits.GIE = 1;
  1585     02D8  178B               	bsf	11,7	;volatile
  1586     02D9                     l141:
  1587     02D9  0008               	return
  1588     02DA                     __end_of_initHardware:
  1589                           
  1590                           	psect	text8
  1591     02B9                     __ptext8:	
  1592 ;; *************** function _initTIMER1module *****************
  1593 ;; Defined at:
  1594 ;;		line 29 in file "hardware.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 3
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_initHardware
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622     02B9                     _initTIMER1module:	
  1623                           ;psect for function _initTIMER1module
  1624                           
  1625     02B9                     l1014:	
  1626                           ;incstack = 0
  1627                           ; Regs used in _initTIMER1module: [wreg+status,2+status,0]
  1628                           
  1629                           
  1630                           ;hardware.c: 30:     T1CONbits.TMR1GE = 0;
  1631     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1632     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1633     02BB  1310               	bcf	16,6	;volatile
  1634                           
  1635                           ;hardware.c: 31:     T1CONbits.TMR1ON = 0;
  1636     02BC  1010               	bcf	16,0	;volatile
  1637                           
  1638                           ;hardware.c: 32:     T1CONbits.TMR1CS = 0;
  1639     02BD  1090               	bcf	16,1	;volatile
  1640     02BE                     l1016:
  1641                           
  1642                           ;hardware.c: 33:     T1CONbits.T1CKPS = 0b00;
  1643     02BE  30CF               	movlw	-49
  1644     02BF  0590               	andwf	16,f	;volatile
  1645     02C0                     l1018:
  1646                           
  1647                           ;hardware.c: 34:     T1CONbits.T1INSYNC = 0;
  1648     02C0  1110               	bcf	16,2	;volatile
  1649     02C1                     l1020:
  1650                           
  1651                           ;hardware.c: 35:     PIE1bits.TMR1IE = 1;
  1652     02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1653     02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1654     02C3  140C               	bsf	12,0	;volatile
  1655     02C4                     l1022:
  1656                           
  1657                           ;hardware.c: 36:     PIR1bits.TMR1IF = 0;
  1658     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1659     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1660     02C6  100C               	bcf	12,0	;volatile
  1661     02C7                     l1024:
  1662                           
  1663                           ;hardware.c: 38:     TMR1L = 0xB0;
  1664     02C7  30B0               	movlw	176
  1665     02C8  008E               	movwf	14	;volatile
  1666     02C9                     l1026:
  1667                           
  1668                           ;hardware.c: 39:     TMR1H = 0x3C;
  1669     02C9  303C               	movlw	60
  1670     02CA  008F               	movwf	15	;volatile
  1671     02CB                     l1028:
  1672                           
  1673                           ;hardware.c: 40:     T1CONbits.TMR1ON = 1;
  1674     02CB  1410               	bsf	16,0	;volatile
  1675     02CC                     l138:
  1676     02CC  0008               	return
  1677     02CD                     __end_of_initTIMER1module:
  1678                           
  1679                           	psect	text9
  1680     0229                     __ptext9:	
  1681 ;; *************** function _initADCmodule *****************
  1682 ;; Defined at:
  1683 ;;		line 3 in file "hardware.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 3
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_initHardware
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711     0229                     _initADCmodule:	
  1712                           ;psect for function _initADCmodule
  1713                           
  1714     0229                     l998:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _initADCmodule: [wreg+status,2+status,0]
  1717                           
  1718                           
  1719                           ;hardware.c: 5:     TRISAbits.TRISA0 = 1;
  1720     0229  1683               	bsf	3,5	;RP0=1, select bank1
  1721     022A  1303               	bcf	3,6	;RP1=0, select bank1
  1722     022B  1405               	bsf	5,0	;volatile
  1723                           
  1724                           ;hardware.c: 6:     TRISAbits.TRISA1 = 1;
  1725     022C  1485               	bsf	5,1	;volatile
  1726                           
  1727                           ;hardware.c: 7:     TRISAbits.TRISA2 = 1;
  1728     022D  1505               	bsf	5,2	;volatile
  1729                           
  1730                           ;hardware.c: 8:     ANSELbits.ANS0 = 1;
  1731     022E  1683               	bsf	3,5	;RP0=1, select bank3
  1732     022F  1703               	bsf	3,6	;RP1=1, select bank3
  1733     0230  1408               	bsf	8,0	;volatile
  1734                           
  1735                           ;hardware.c: 9:     ANSELbits.ANS1 = 1;
  1736     0231  1488               	bsf	8,1	;volatile
  1737                           
  1738                           ;hardware.c: 10:     ANSELbits.ANS2 = 1;
  1739     0232  1508               	bsf	8,2	;volatile
  1740                           
  1741                           ;hardware.c: 12:     ADCON0bits.ADCS0 = 0;
  1742     0233  1283               	bcf	3,5	;RP0=0, select bank0
  1743     0234  1303               	bcf	3,6	;RP1=0, select bank0
  1744     0235  131F               	bcf	31,6	;volatile
  1745                           
  1746                           ;hardware.c: 13:     ADCON0bits.ADCS1 = 1;
  1747     0236  179F               	bsf	31,7	;volatile
  1748                           
  1749                           ;hardware.c: 14:     ADCON1bits.VCFG0 = 0;
  1750     0237  1683               	bsf	3,5	;RP0=1, select bank1
  1751     0238  1303               	bcf	3,6	;RP1=0, select bank1
  1752     0239  121F               	bcf	31,4	;volatile
  1753                           
  1754                           ;hardware.c: 15:     ADCON1bits.VCFG1 = 0;
  1755     023A  129F               	bcf	31,5	;volatile
  1756     023B                     l1000:
  1757                           
  1758                           ;hardware.c: 16:     ADCON0bits.CHS = 0b0000;
  1759     023B  30C3               	movlw	-61
  1760     023C  1283               	bcf	3,5	;RP0=0, select bank0
  1761     023D  1303               	bcf	3,6	;RP1=0, select bank0
  1762     023E  059F               	andwf	31,f	;volatile
  1763     023F                     l1002:
  1764                           
  1765                           ;hardware.c: 17:     ADCON1bits.ADFM = 1;
  1766     023F  1683               	bsf	3,5	;RP0=1, select bank1
  1767     0240  1303               	bcf	3,6	;RP1=0, select bank1
  1768     0241  179F               	bsf	31,7	;volatile
  1769     0242                     l1004:
  1770                           
  1771                           ;hardware.c: 18:     ADCON0bits.ADON = 1;
  1772     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1773     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1774     0244  141F               	bsf	31,0	;volatile
  1775     0245                     l1006:
  1776                           
  1777                           ;hardware.c: 19:     PIE1bits.ADIE = 1;
  1778     0245  1683               	bsf	3,5	;RP0=1, select bank1
  1779     0246  1303               	bcf	3,6	;RP1=0, select bank1
  1780     0247  170C               	bsf	12,6	;volatile
  1781     0248                     l1008:
  1782                           
  1783                           ;hardware.c: 23:     INTCONbits.T0IE = 0;
  1784     0248  128B               	bcf	11,5	;volatile
  1785     0249                     l1010:
  1786                           
  1787                           ;hardware.c: 24:     OPTION_REGbits.T0CS =0;
  1788     0249  1281               	bcf	1,5	;volatile
  1789     024A                     l1012:
  1790                           
  1791                           ;hardware.c: 25:     OPTION_REGbits.PSA =1;
  1792     024A  1581               	bsf	1,3	;volatile
  1793     024B                     l135:
  1794     024B  0008               	return
  1795     024C                     __end_of_initADCmodule:
  1796                           
  1797                           	psect	text10
  1798     026F                     __ptext10:	
  1799 ;; *************** function _create_task *****************
  1800 ;; Defined at:
  1801 ;;		line 10 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  ticks_period    2    0[BANK0 ] int 
  1804 ;;  run             1    2[BANK0 ] PTR FTN()void 
  1805 ;;		 -> readHumidity(1), readTemperature(1), readNoise(1), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  to_create       5    5[BANK0 ] volatile struct task
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  5    0[BANK0 ] struct task
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         0       5       0       0       0
  1818 ;;      Locals:         0       5       0       0       0
  1819 ;;      Temps:          0       0       0       0       0
  1820 ;;      Totals:         0      10       0       0       0
  1821 ;;Total ram usage:       10 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 3
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831     026F                     _create_task:	
  1832                           ;psect for function _create_task
  1833                           
  1834     026F                     l1046:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _create_task: [wreg-fsr0h+status,2+status,0]
  1837                           
  1838                           
  1839                           ;main.c: 11:     task_t to_create;;main.c: 12:     to_create.ticks_left = ticks_period;
  1840     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1841     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1842     0271  084F               	movf	create_task@ticks_period+1,w
  1843     0272  00D4               	movwf	create_task@to_create+1	;volatile
  1844     0273  084E               	movf	create_task@ticks_period,w
  1845     0274  00D3               	movwf	create_task@to_create	;volatile
  1846                           
  1847                           ;main.c: 13:     to_create.ticks_period = ticks_period;
  1848     0275  084F               	movf	create_task@ticks_period+1,w
  1849     0276  00D6               	movwf	create_task@to_create+3	;volatile
  1850     0277  084E               	movf	create_task@ticks_period,w
  1851     0278  00D5               	movwf	create_task@to_create+2	;volatile
  1852                           
  1853                           ;main.c: 14:     to_create.run = run;
  1854     0279  0850               	movf	create_task@run,w
  1855     027A  00D7               	movwf	low ((create_task@to_create| 0+4))	;volatile
  1856     027B                     l1048:
  1857                           
  1858                           ;main.c: 15:     return to_create;
  1859     027B  304E               	movlw	?_create_task& (0+255)
  1860     027C  0084               	movwf	4
  1861     027D  0853               	movf	create_task@to_create,w	;volatile
  1862     027E  1383               	bcf	3,7	;select IRP bank0
  1863     027F  0080               	movwf	0
  1864     0280  0A84               	incf	4,f
  1865     0281  0854               	movf	create_task@to_create+1,w	;volatile
  1866     0282  0080               	movwf	0
  1867     0283  0A84               	incf	4,f
  1868     0284  0855               	movf	create_task@to_create+2,w	;volatile
  1869     0285  0080               	movwf	0
  1870     0286  0A84               	incf	4,f
  1871     0287  0856               	movf	create_task@to_create+3,w	;volatile
  1872     0288  0080               	movwf	0
  1873     0289  0A84               	incf	4,f
  1874     028A  0857               	movf	create_task@to_create+4,w	;volatile
  1875     028B  0080               	movwf	0
  1876     028C                     l19:
  1877     028C  0008               	return
  1878     028D                     __end_of_create_task:
  1879                           
  1880                           	psect	text11
  1881     028D                     __ptext11:	
  1882 ;; *************** function ___bmul *****************
  1883 ;; Defined at:
  1884 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  multiplier      1    wreg     unsigned char 
  1887 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1890 ;;  product         1    2[BANK0 ] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      unsigned char 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1900 ;;      Params:         0       1       0       0       0
  1901 ;;      Locals:         0       2       0       0       0
  1902 ;;      Temps:          0       1       0       0       0
  1903 ;;      Totals:         0       4       0       0       0
  1904 ;;Total ram usage:        4 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 3
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;;		_ISR_periodic_interrupt
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915     028D                     ___bmul:	
  1916                           ;psect for function ___bmul
  1917                           
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1921                           ;___bmul@multiplier stored from wreg
  1922     028D  1283               	bcf	3,5	;RP0=0, select bank0
  1923     028E  1303               	bcf	3,6	;RP1=0, select bank0
  1924     028F  00D1               	movwf	___bmul@multiplier
  1925     0290                     l1124:
  1926     0290  01D0               	clrf	___bmul@product
  1927     0291                     l1126:
  1928     0291  1C51               	btfss	___bmul@multiplier,0
  1929     0292  2A94               	goto	u291
  1930     0293  2A95               	goto	u290
  1931     0294                     u291:
  1932     0294  2A99               	goto	l1130
  1933     0295                     u290:
  1934     0295                     l1128:
  1935     0295  084E               	movf	___bmul@multiplicand,w
  1936     0296  00CF               	movwf	??___bmul
  1937     0297  084F               	movf	??___bmul,w
  1938     0298  07D0               	addwf	___bmul@product,f
  1939     0299                     l1130:
  1940     0299  1003               	clrc
  1941     029A  0DCE               	rlf	___bmul@multiplicand,f
  1942     029B                     l1132:
  1943     029B  1003               	clrc
  1944     029C  0CD1               	rrf	___bmul@multiplier,f
  1945     029D  0851               	movf	___bmul@multiplier,w
  1946     029E  1D03               	btfss	3,2
  1947     029F  2AA1               	goto	u301
  1948     02A0  2AA2               	goto	u300
  1949     02A1                     u301:
  1950     02A1  2A91               	goto	l1126
  1951     02A2                     u300:
  1952     02A2                     l1134:
  1953     02A2  0850               	movf	___bmul@product,w
  1954     02A3                     l290:
  1955     02A3  0008               	return
  1956     02A4                     __end_of___bmul:
  1957                           
  1958                           	psect	text12
  1959     024C                     __ptext12:	
  1960 ;; *************** function _MAIN_ISR *****************
  1961 ;; Defined at:
  1962 ;;		line 18 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          4       0       0       0       0
  1979 ;;      Totals:         4       0       0       0       0
  1980 ;;Total ram usage:        4 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 2
  1983 ;; This function calls:
  1984 ;;		_ISR_ADC_lecture_ready
  1985 ;;		_ISR_periodic_interrupt
  1986 ;; This function is called by:
  1987 ;;		Interrupt level 1
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991     024C                     _MAIN_ISR:	
  1992                           ;psect for function _MAIN_ISR
  1993                           
  1994     024C                     i1l1138:
  1995                           
  1996                           ;main.c: 19:     if(PIR1bits.TMR1IF == 1) ISR_periodic_interrupt(task_array,3);
  1997     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1998     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1999     024E  1C0C               	btfss	12,0	;volatile
  2000     024F  2A51               	goto	u31_21
  2001     0250  2A52               	goto	u31_20
  2002     0251                     u31_21:
  2003     0251  2A5B               	goto	i1l24
  2004     0252                     u31_20:
  2005     0252                     i1l1140:
  2006     0252  3003               	movlw	3
  2007     0253  00F4               	movwf	ISR_periodic_interrupt@task_amount
  2008     0254  3026               	movlw	(low (_task_array| 0))& (0+255)
  2009     0255  120A  118A  2183  120A  118A  	fcall	_ISR_periodic_interrupt
  2010     025A  2A64               	goto	i1l27
  2011     025B                     i1l24:	
  2012                           ;main.c: 20:     else if(PIR1bits.ADIF==1) ISR_ADC_lecture_ready();
  2013                           
  2014     025B  1F0C               	btfss	12,6	;volatile
  2015     025C  2A5E               	goto	u32_21
  2016     025D  2A5F               	goto	u32_20
  2017     025E                     u32_21:
  2018     025E  2A64               	goto	i1l27
  2019     025F                     u32_20:
  2020     025F                     i1l1142:
  2021     025F  120A  118A  210A  120A  118A  	fcall	_ISR_ADC_lecture_ready
  2022     0264                     i1l27:
  2023     0264  087B               	movf	??_MAIN_ISR+3,w
  2024     0265  00FF               	movwf	btemp+1
  2025     0266  087A               	movf	??_MAIN_ISR+2,w
  2026     0267  008A               	movwf	10
  2027     0268  0879               	movf	??_MAIN_ISR+1,w
  2028     0269  0084               	movwf	4
  2029     026A  0E78               	swapf	??_MAIN_ISR,w
  2030     026B  0083               	movwf	3
  2031     026C  0EFE               	swapf	btemp,f
  2032     026D  0E7E               	swapf	btemp,w
  2033     026E  0009               	retfie
  2034     026F                     __end_of_MAIN_ISR:
  2035                           
  2036                           	psect	intentry
  2037     0004                     __pintentry:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _MAIN_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2040                           
  2041     0004                     interrupt_function:
  2042     007E                     saved_w	set	btemp
  2043     0004  00FE               	movwf	btemp
  2044     0005  0E03               	swapf	3,w
  2045     0006  00F8               	movwf	??_MAIN_ISR
  2046     0007  0804               	movf	4,w
  2047     0008  00F9               	movwf	??_MAIN_ISR+1
  2048     0009  080A               	movf	10,w
  2049     000A  00FA               	movwf	??_MAIN_ISR+2
  2050     000B  087F               	movf	btemp+1,w
  2051     000C  00FB               	movwf	??_MAIN_ISR+3
  2052     000D  120A  118A  2A4C   	ljmp	_MAIN_ISR
  2053                           
  2054                           	psect	text13
  2055     0183                     __ptext13:	
  2056 ;; *************** function _ISR_periodic_interrupt *****************
  2057 ;; Defined at:
  2058 ;;		line 24 in file "ISR.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  task_array      1    wreg     PTR volatile struct task
  2061 ;;		 -> task_array(40), 
  2062 ;;  task_amount     1    4[COMMON] unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  task_array      1    6[COMMON] PTR volatile struct task
  2065 ;;		 -> task_array(40), 
  2066 ;;  i               1    7[COMMON] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         1       0       0       0       0
  2077 ;;      Locals:         2       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0
  2079 ;;      Totals:         4       0       0       0       0
  2080 ;;Total ram usage:        4 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 1
  2083 ;; This function calls:
  2084 ;;		i1___bmul
  2085 ;; This function is called by:
  2086 ;;		_MAIN_ISR
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090     0183                     _ISR_periodic_interrupt:	
  2091                           ;psect for function _ISR_periodic_interrupt
  2092                           
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in _ISR_periodic_interrupt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2096                           ;ISR_periodic_interrupt@task_array stored from wreg
  2097     0183  00F6               	movwf	ISR_periodic_interrupt@task_array
  2098     0184                     i1l1052:
  2099                           
  2100                           ;ISR.c: 26:     PIR1bits.TMR1IF = 0;
  2101     0184  1283               	bcf	3,5	;RP0=0, select bank0
  2102     0185  1303               	bcf	3,6	;RP1=0, select bank0
  2103     0186  100C               	bcf	12,0	;volatile
  2104     0187                     i1l1054:
  2105                           
  2106                           ;ISR.c: 27:     TMR1L = 0xB0;
  2107     0187  30B0               	movlw	176
  2108     0188  008E               	movwf	14	;volatile
  2109                           
  2110                           ;ISR.c: 28:     TMR1H = 0x3C;
  2111     0189  303C               	movlw	60
  2112     018A  008F               	movwf	15	;volatile
  2113     018B                     i1l1056:
  2114                           
  2115                           ;ISR.c: 30:     for(char i = 0; i < task_amount;i++){
  2116     018B  01F7               	clrf	ISR_periodic_interrupt@i
  2117     018C  29A9               	goto	i1l1062
  2118     018D                     i1l1058:
  2119                           
  2120                           ;ISR.c: 31:         task_array[i].ticks_left--;
  2121     018D  3005               	movlw	5
  2122     018E  00F0               	movwf	i1___bmul@multiplicand
  2123     018F  0877               	movf	ISR_periodic_interrupt@i,w
  2124     0190  120A  118A  22A4  120A  118A  	fcall	i1___bmul
  2125     0195  0776               	addwf	ISR_periodic_interrupt@task_array,w
  2126     0196  00F5               	movwf	??_ISR_periodic_interrupt
  2127     0197  0875               	movf	??_ISR_periodic_interrupt,w
  2128     0198  0084               	movwf	4
  2129     0199  30FF               	movlw	255
  2130     019A  1383               	bcf	3,7	;select IRP bank0
  2131     019B  0780               	addwf	0,f
  2132     019C  0F84               	incfsz	4,f
  2133     019D  0800               	movf	0,w
  2134     019E  1803               	skipnc
  2135     019F  0A00               	incf	0,w
  2136     01A0  00FF               	movwf	btemp+1
  2137     01A1  30FF               	movlw	255
  2138     01A2  077F               	addwf	btemp+1,w
  2139     01A3  0080               	movwf	0
  2140     01A4  0384               	decf	4,f
  2141     01A5                     i1l1060:
  2142                           
  2143                           ;ISR.c: 32:     }
  2144     01A5  3001               	movlw	1
  2145     01A6  00F5               	movwf	??_ISR_periodic_interrupt
  2146     01A7  0875               	movf	??_ISR_periodic_interrupt,w
  2147     01A8  07F7               	addwf	ISR_periodic_interrupt@i,f
  2148     01A9                     i1l1062:
  2149     01A9  0874               	movf	ISR_periodic_interrupt@task_amount,w
  2150     01AA  0277               	subwf	ISR_periodic_interrupt@i,w
  2151     01AB  1C03               	skipc
  2152     01AC  29AE               	goto	u21_21
  2153     01AD  29AF               	goto	u21_20
  2154     01AE                     u21_21:
  2155     01AE  298D               	goto	i1l1058
  2156     01AF                     u21_20:
  2157     01AF                     i1l178:
  2158     01AF  0008               	return
  2159     01B0                     __end_of_ISR_periodic_interrupt:
  2160                           
  2161                           	psect	text14
  2162     02A4                     __ptext14:	
  2163 ;; *************** function i1___bmul *****************
  2164 ;; Defined at:
  2165 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  multiplier      1    wreg     unsigned char 
  2168 ;;  multiplicand    1    0[COMMON] unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  multiplier      1    3[COMMON] unsigned char 
  2171 ;;  product         1    2[COMMON] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      unsigned char 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         1       0       0       0       0
  2182 ;;      Locals:         2       0       0       0       0
  2183 ;;      Temps:          1       0       0       0       0
  2184 ;;      Totals:         4       0       0       0       0
  2185 ;;Total ram usage:        4 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_ISR_periodic_interrupt
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194     02A4                     i1___bmul:	
  2195                           ;psect for function i1___bmul
  2196                           
  2197                           
  2198                           ;incstack = 0
  2199                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2200                           ;i1___bmul@multiplier stored from wreg
  2201     02A4  00F3               	movwf	i1___bmul@multiplier
  2202     02A5                     i1l1032:
  2203     02A5  01F2               	clrf	i1___bmul@product
  2204     02A6                     i1l1034:
  2205     02A6  1C73               	btfss	i1___bmul@multiplier,0
  2206     02A7  2AA9               	goto	u19_21
  2207     02A8  2AAA               	goto	u19_20
  2208     02A9                     u19_21:
  2209     02A9  2AAE               	goto	i1l1038
  2210     02AA                     u19_20:
  2211     02AA                     i1l1036:
  2212     02AA  0870               	movf	i1___bmul@multiplicand,w
  2213     02AB  00F1               	movwf	??i1___bmul
  2214     02AC  0871               	movf	??i1___bmul,w
  2215     02AD  07F2               	addwf	i1___bmul@product,f
  2216     02AE                     i1l1038:
  2217     02AE  1003               	clrc
  2218     02AF  0DF0               	rlf	i1___bmul@multiplicand,f
  2219     02B0                     i1l1040:
  2220     02B0  1003               	clrc
  2221     02B1  0CF3               	rrf	i1___bmul@multiplier,f
  2222     02B2  0873               	movf	i1___bmul@multiplier,w
  2223     02B3  1D03               	btfss	3,2
  2224     02B4  2AB6               	goto	u20_21
  2225     02B5  2AB7               	goto	u20_20
  2226     02B6                     u20_21:
  2227     02B6  2AA6               	goto	i1l1034
  2228     02B7                     u20_20:
  2229     02B7                     i1l1042:
  2230     02B7  0872               	movf	i1___bmul@product,w
  2231     02B8                     i1l290:
  2232     02B8  0008               	return
  2233     02B9                     __end_ofi1___bmul:
  2234                           
  2235                           	psect	text15
  2236     010A                     __ptext15:	
  2237 ;; *************** function _ISR_ADC_lecture_ready *****************
  2238 ;; Defined at:
  2239 ;;		line 4 in file "ISR.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  lecture         2    6[COMMON] int 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         2       0       0       0       0
  2255 ;;      Temps:          4       0       0       0       0
  2256 ;;      Totals:         6       0       0       0       0
  2257 ;;Total ram usage:        6 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 1
  2260 ;; This function calls:
  2261 ;;		_taskData_get_ADC_CurrentTask
  2262 ;;		_taskData_get_MaxNoise
  2263 ;;		_taskData_set_Humidity
  2264 ;;		_taskData_set_MaxNoise
  2265 ;;		_taskData_set_Temperature
  2266 ;;		i1_taskData_setADC_ready
  2267 ;; This function is called by:
  2268 ;;		_MAIN_ISR
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272     010A                     _ISR_ADC_lecture_ready:	
  2273                           ;psect for function _ISR_ADC_lecture_ready
  2274                           
  2275     010A                     i1l1064:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _ISR_ADC_lecture_ready: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2278                           
  2279                           
  2280                           ;ISR.c: 5:     PIR1bits.ADIF=0;
  2281     010A  1283               	bcf	3,5	;RP0=0, select bank0
  2282     010B  1303               	bcf	3,6	;RP1=0, select bank0
  2283     010C  130C               	bcf	12,6	;volatile
  2284     010D                     i1l1066:
  2285                           
  2286                           ;ISR.c: 6:     taskData_setADC_ready(1);
  2287     010D  3001               	movlw	1
  2288     010E  120A  118A  230A  120A  118A  	fcall	i1_taskData_setADC_ready
  2289     0113                     i1l1068:
  2290                           
  2291                           ;ISR.c: 8:     switch(taskData_get_ADC_CurrentTask()){
  2292     0113  296B               	goto	i1l1082
  2293     0114                     i1l1070:
  2294                           
  2295                           ;ISR.c: 10:             taskData_set_Humidity((int)ADRESH << 8 | (int)ADRESL);
  2296     0114  1683               	bsf	3,5	;RP0=1, select bank1
  2297     0115  1303               	bcf	3,6	;RP1=0, select bank1
  2298     0116  081E               	movf	30,w	;volatile
  2299     0117  00F2               	movwf	??_ISR_ADC_lecture_ready
  2300     0118  01F3               	clrf	??_ISR_ADC_lecture_ready+1
  2301     0119  1283               	bcf	3,5	;RP0=0, select bank0
  2302     011A  1303               	bcf	3,6	;RP1=0, select bank0
  2303     011B  081E               	movf	30,w	;volatile
  2304     011C  00F4               	movwf	??_ISR_ADC_lecture_ready+2
  2305     011D  01F5               	clrf	??_ISR_ADC_lecture_ready+3
  2306     011E  0874               	movf	??_ISR_ADC_lecture_ready+2,w
  2307     011F  00F5               	movwf	??_ISR_ADC_lecture_ready+3
  2308     0120  01F4               	clrf	??_ISR_ADC_lecture_ready+2
  2309     0121  0872               	movf	??_ISR_ADC_lecture_ready,w
  2310     0122  0474               	iorwf	??_ISR_ADC_lecture_ready+2,w
  2311     0123  00F0               	movwf	taskData_set_Humidity@value
  2312     0124  0873               	movf	??_ISR_ADC_lecture_ready+1,w
  2313     0125  0475               	iorwf	??_ISR_ADC_lecture_ready+3,w
  2314     0126  00F1               	movwf	taskData_set_Humidity@value+1
  2315     0127  120A  118A  22F0  120A  118A  	fcall	_taskData_set_Humidity
  2316                           
  2317                           ;ISR.c: 11:             break;
  2318     012C  2982               	goto	i1l172
  2319     012D                     i1l1072:
  2320                           
  2321                           ;ISR.c: 13:             taskData_set_Temperature((int)ADRESH << 8 | (int)ADRESL);
  2322     012D  1683               	bsf	3,5	;RP0=1, select bank1
  2323     012E  1303               	bcf	3,6	;RP1=0, select bank1
  2324     012F  081E               	movf	30,w	;volatile
  2325     0130  00F2               	movwf	??_ISR_ADC_lecture_ready
  2326     0131  01F3               	clrf	??_ISR_ADC_lecture_ready+1
  2327     0132  1283               	bcf	3,5	;RP0=0, select bank0
  2328     0133  1303               	bcf	3,6	;RP1=0, select bank0
  2329     0134  081E               	movf	30,w	;volatile
  2330     0135  00F4               	movwf	??_ISR_ADC_lecture_ready+2
  2331     0136  01F5               	clrf	??_ISR_ADC_lecture_ready+3
  2332     0137  0874               	movf	??_ISR_ADC_lecture_ready+2,w
  2333     0138  00F5               	movwf	??_ISR_ADC_lecture_ready+3
  2334     0139  01F4               	clrf	??_ISR_ADC_lecture_ready+2
  2335     013A  0872               	movf	??_ISR_ADC_lecture_ready,w
  2336     013B  0474               	iorwf	??_ISR_ADC_lecture_ready+2,w
  2337     013C  00F0               	movwf	taskData_set_Temperature@value
  2338     013D  0873               	movf	??_ISR_ADC_lecture_ready+1,w
  2339     013E  0475               	iorwf	??_ISR_ADC_lecture_ready+3,w
  2340     013F  00F1               	movwf	taskData_set_Temperature@value+1
  2341     0140  120A  118A  22E2  120A  118A  	fcall	_taskData_set_Temperature
  2342                           
  2343                           ;ISR.c: 14:             break;
  2344     0145  2982               	goto	i1l172
  2345     0146                     i1l1074:
  2346                           
  2347                           ;ISR.c: 16:             lecture = (int)ADRESH << 8 | (int)ADRESL;
  2348     0146  1283               	bcf	3,5	;RP0=0, select bank0
  2349     0147  1303               	bcf	3,6	;RP1=0, select bank0
  2350     0148  081E               	movf	30,w	;volatile
  2351     0149  00F7               	movwf	ISR_ADC_lecture_ready@lecture+1
  2352     014A  1683               	bsf	3,5	;RP0=1, select bank1
  2353     014B  1303               	bcf	3,6	;RP1=0, select bank1
  2354     014C  081E               	movf	30,w	;volatile
  2355     014D  00F6               	movwf	ISR_ADC_lecture_ready@lecture
  2356     014E                     i1l1076:
  2357                           
  2358                           ;ISR.c: 17:             if(lecture > taskData_get_MaxNoise()){
  2359     014E  120A  118A  22F7  120A  118A  	fcall	_taskData_get_MaxNoise
  2360     0153  0871               	movf	?_taskData_get_MaxNoise+1,w
  2361     0154  3A80               	xorlw	128
  2362     0155  00F2               	movwf	??_ISR_ADC_lecture_ready
  2363     0156  0877               	movf	ISR_ADC_lecture_ready@lecture+1,w
  2364     0157  3A80               	xorlw	128
  2365     0158  0272               	subwf	??_ISR_ADC_lecture_ready,w
  2366     0159  1D03               	skipz
  2367     015A  295D               	goto	u22_25
  2368     015B  0876               	movf	ISR_ADC_lecture_ready@lecture,w
  2369     015C  0270               	subwf	?_taskData_get_MaxNoise,w
  2370     015D                     u22_25:
  2371     015D  1803               	skipnc
  2372     015E  2960               	goto	u22_21
  2373     015F  2961               	goto	u22_20
  2374     0160                     u22_21:
  2375     0160  2982               	goto	i1l172
  2376     0161                     u22_20:
  2377     0161                     i1l1078:
  2378                           
  2379                           ;ISR.c: 18:                 taskData_set_MaxNoise(lecture);
  2380     0161  0877               	movf	ISR_ADC_lecture_ready@lecture+1,w
  2381     0162  00F1               	movwf	taskData_set_MaxNoise@value+1
  2382     0163  0876               	movf	ISR_ADC_lecture_ready@lecture,w
  2383     0164  00F0               	movwf	taskData_set_MaxNoise@value
  2384     0165  120A  118A  22E9  120A  118A  	fcall	_taskData_set_MaxNoise
  2385     016A  2982               	goto	i1l172
  2386     016B                     i1l1082:
  2387     016B  120A  118A  2310  120A  118A  	fcall	_taskData_get_ADC_CurrentTask
  2388     0170  00F2               	movwf	??_ISR_ADC_lecture_ready
  2389     0171  01F3               	clrf	??_ISR_ADC_lecture_ready+1
  2390                           
  2391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2392                           ; Switch size 1, requested type "simple"
  2393                           ; Number of cases is 1, Range of values is 0 to 0
  2394                           ; switch strategies available:
  2395                           ; Name         Instructions Cycles
  2396                           ; simple_byte            4     3 (average)
  2397                           ; direct_byte           11     8 (fixed)
  2398                           ; jumptable            260     6 (fixed)
  2399                           ;	Chosen strategy is simple_byte
  2400     0172  0873               	movf	??_ISR_ADC_lecture_ready+1,w
  2401     0173  3A00               	xorlw	0	; case 0
  2402     0174  1903               	skipnz
  2403     0175  2977               	goto	i1l1186
  2404     0176  2982               	goto	i1l172
  2405     0177                     i1l1186:
  2406                           
  2407                           ; Switch size 1, requested type "simple"
  2408                           ; Number of cases is 3, Range of values is 0 to 2
  2409                           ; switch strategies available:
  2410                           ; Name         Instructions Cycles
  2411                           ; simple_byte           10     6 (average)
  2412                           ; direct_byte           17     8 (fixed)
  2413                           ; jumptable            260     6 (fixed)
  2414                           ;	Chosen strategy is simple_byte
  2415     0177  0872               	movf	??_ISR_ADC_lecture_ready,w
  2416     0178  3A00               	xorlw	0	; case 0
  2417     0179  1903               	skipnz
  2418     017A  2914               	goto	i1l1070
  2419     017B  3A01               	xorlw	1	; case 1
  2420     017C  1903               	skipnz
  2421     017D  292D               	goto	i1l1072
  2422     017E  3A03               	xorlw	3	; case 2
  2423     017F  1903               	skipnz
  2424     0180  2946               	goto	i1l1074
  2425     0181  2982               	goto	i1l172
  2426     0182                     i1l172:
  2427     0182  0008               	return
  2428     0183                     __end_of_ISR_ADC_lecture_ready:
  2429                           
  2430                           	psect	text16
  2431     030A                     __ptext16:	
  2432 ;; *************** function i1_taskData_setADC_ready *****************
  2433 ;; Defined at:
  2434 ;;		line 12 in file "taskData.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  value           1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  value           1    0[COMMON] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         1       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         1       0       0       0       0
  2452 ;;Total ram usage:        1 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_ISR_ADC_lecture_ready
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461     030A                     i1_taskData_setADC_ready:	
  2462                           ;psect for function i1_taskData_setADC_ready
  2463                           
  2464                           
  2465                           ;incstack = 0
  2466                           ; Regs used in i1_taskData_setADC_ready: [wreg]
  2467                           ;i1taskData_setADC_ready@value stored from wreg
  2468     030A  00F0               	movwf	i1taskData_setADC_ready@value
  2469     030B                     i1l1030:
  2470                           
  2471                           ;taskData.c: 13:     adc_ready = value;
  2472     030B  0870               	movf	i1taskData_setADC_ready@value,w
  2473     030C  00FD               	movwf	_adc_ready
  2474     030D                     i1l53:
  2475     030D  0008               	return
  2476     030E                     __end_ofi1_taskData_setADC_ready:
  2477                           
  2478                           	psect	text17
  2479     02E2                     __ptext17:	
  2480 ;; *************** function _taskData_set_Temperature *****************
  2481 ;; Defined at:
  2482 ;;		line 24 in file "taskData.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  value           2    0[COMMON] int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         2       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_ISR_ADC_lecture_ready
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509     02E2                     _taskData_set_Temperature:	
  2510                           ;psect for function _taskData_set_Temperature
  2511                           
  2512     02E2                     i1l990:	
  2513                           ;incstack = 0
  2514                           ; Regs used in _taskData_set_Temperature: [wreg]
  2515                           
  2516                           
  2517                           ;taskData.c: 25:     temperature = value;
  2518     02E2  0871               	movf	taskData_set_Temperature@value+1,w
  2519     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2520     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2521     02E5  00A3               	movwf	_temperature+1
  2522     02E6  0870               	movf	taskData_set_Temperature@value,w
  2523     02E7  00A2               	movwf	_temperature
  2524     02E8                     i1l65:
  2525     02E8  0008               	return
  2526     02E9                     __end_of_taskData_set_Temperature:
  2527                           
  2528                           	psect	text18
  2529     02E9                     __ptext18:	
  2530 ;; *************** function _taskData_set_MaxNoise *****************
  2531 ;; Defined at:
  2532 ;;		line 30 in file "taskData.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  value           2    0[COMMON] int 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         2       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         2       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_ISR_ADC_lecture_ready
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559     02E9                     _taskData_set_MaxNoise:	
  2560                           ;psect for function _taskData_set_MaxNoise
  2561                           
  2562     02E9                     i1l996:	
  2563                           ;incstack = 0
  2564                           ; Regs used in _taskData_set_MaxNoise: [wreg]
  2565                           
  2566                           
  2567                           ;taskData.c: 31:     max_noise = value;
  2568     02E9  0871               	movf	taskData_set_MaxNoise@value+1,w
  2569     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2570     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2571     02EC  00A1               	movwf	_max_noise+1
  2572     02ED  0870               	movf	taskData_set_MaxNoise@value,w
  2573     02EE  00A0               	movwf	_max_noise
  2574     02EF                     i1l71:
  2575     02EF  0008               	return
  2576     02F0                     __end_of_taskData_set_MaxNoise:
  2577                           
  2578                           	psect	text19
  2579     02F0                     __ptext19:	
  2580 ;; *************** function _taskData_set_Humidity *****************
  2581 ;; Defined at:
  2582 ;;		line 21 in file "taskData.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  value           2    0[COMMON] int 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         2       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0
  2599 ;;      Totals:         2       0       0       0       0
  2600 ;;Total ram usage:        2 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_ISR_ADC_lecture_ready
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609     02F0                     _taskData_set_Humidity:	
  2610                           ;psect for function _taskData_set_Humidity
  2611                           
  2612     02F0                     i1l988:	
  2613                           ;incstack = 0
  2614                           ; Regs used in _taskData_set_Humidity: [wreg]
  2615                           
  2616                           
  2617                           ;taskData.c: 22:     humidity = value;
  2618     02F0  0871               	movf	taskData_set_Humidity@value+1,w
  2619     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2620     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2621     02F3  00A5               	movwf	_humidity+1
  2622     02F4  0870               	movf	taskData_set_Humidity@value,w
  2623     02F5  00A4               	movwf	_humidity
  2624     02F6                     i1l62:
  2625     02F6  0008               	return
  2626     02F7                     __end_of_taskData_set_Humidity:
  2627                           
  2628                           	psect	text20
  2629     02F7                     __ptext20:	
  2630 ;; *************** function _taskData_get_MaxNoise *****************
  2631 ;; Defined at:
  2632 ;;		line 27 in file "taskData.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2    0[COMMON] int 
  2639 ;; Registers used:
  2640 ;;		wreg
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         2       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0
  2649 ;;      Totals:         2       0       0       0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_ISR_ADC_lecture_ready
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     02F7                     _taskData_get_MaxNoise:	
  2660                           ;psect for function _taskData_get_MaxNoise
  2661                           
  2662     02F7                     i1l992:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _taskData_get_MaxNoise: [wreg]
  2665                           
  2666                           
  2667                           ;taskData.c: 28:     return max_noise;
  2668     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2669     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2670     02F9  0821               	movf	_max_noise+1,w
  2671     02FA  00F1               	movwf	?_taskData_get_MaxNoise+1
  2672     02FB  0820               	movf	_max_noise,w
  2673     02FC  00F0               	movwf	?_taskData_get_MaxNoise
  2674     02FD                     i1l68:
  2675     02FD  0008               	return
  2676     02FE                     __end_of_taskData_get_MaxNoise:
  2677                           
  2678                           	psect	text21
  2679     0310                     __ptext21:	
  2680 ;; *************** function _taskData_get_ADC_CurrentTask *****************
  2681 ;; Defined at:
  2682 ;;		line 18 in file "taskData.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      unsigned char 
  2689 ;; Registers used:
  2690 ;;		wreg
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_ISR_ADC_lecture_ready
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709     0310                     _taskData_get_ADC_CurrentTask:	
  2710                           ;psect for function _taskData_get_ADC_CurrentTask
  2711                           
  2712     0310                     i1l778:	
  2713                           ;incstack = 0
  2714                           ; Regs used in _taskData_get_ADC_CurrentTask: [wreg]
  2715                           
  2716                           
  2717                           ;taskData.c: 19:     return adc_current_task;
  2718     0310  087C               	movf	_adc_current_task,w
  2719     0311                     i1l59:
  2720     0311  0008               	return
  2721     0312                     __end_of_taskData_get_ADC_CurrentTask:
  2722     0006                     
  2723                           	psect	functab
  2724     0027                     __pfunctab:
  2725     0027                     __fptable:
  2726     0027                     fptable:
  2727     0027  00FF               	movwf	(btemp+1)& (0+127)
  2728     0028  3000               	movlw	high fptable
  2729     0029  008A               	movwf	10
  2730     002A  087F               	movf	(btemp+1)& (0+127),w
  2731     002B  0782               	addwf	2,f
  2732     002C                     fpbase:
  2733     002C  282C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2734     002D                     fp__readTemperature:
  2735     002D  120A  118A  29D9   	ljmp	_readTemperature
  2736     0030                     fp__readNoise:
  2737     0030  120A  118A  29B0   	ljmp	_readNoise
  2738     0033                     fp__readHumidity:
  2739     0033  120A  118A  2A02   	ljmp	_readHumidity
  2740     0036                     __end_of__fptable:
  2741     007E                     btemp	set	126	;btemp
  2742     007E                     wtemp0	set	126
  2743                           
  2744                           	psect	idloc
  2745                           
  2746                           ;Config register IDLOC0 @ 0x2000
  2747                           ;	unspecified, using default values
  2748     2000                     	org	8192
  2749     2000  3FFF               	dw	16383
  2750                           
  2751                           ;Config register IDLOC1 @ 0x2001
  2752                           ;	unspecified, using default values
  2753     2001                     	org	8193
  2754     2001  3FFF               	dw	16383
  2755                           
  2756                           ;Config register IDLOC2 @ 0x2002
  2757                           ;	unspecified, using default values
  2758     2002                     	org	8194
  2759     2002  3FFF               	dw	16383
  2760                           
  2761                           ;Config register IDLOC3 @ 0x2003
  2762                           ;	unspecified, using default values
  2763     2003                     	org	8195
  2764     2003  3FFF               	dw	16383
  2765                           
  2766                           	psect	config
  2767                           
  2768                           ;Config register CONFIG1 @ 0x2007
  2769                           ;	unspecified, using default values
  2770                           ;	Oscillator Selection bits
  2771                           ;	FOSC = 0x7, unprogrammed default
  2772                           ;	Watchdog Timer Enable bit
  2773                           ;	WDTE = 0x1, unprogrammed default
  2774                           ;	Power-up Timer Enable bit
  2775                           ;	PWRTE = 0x1, unprogrammed default
  2776                           ;	RE3/MCLR pin function select bit
  2777                           ;	MCLRE = 0x1, unprogrammed default
  2778                           ;	Code Protection bit
  2779                           ;	CP = 0x1, unprogrammed default
  2780                           ;	Data Code Protection bit
  2781                           ;	CPD = 0x1, unprogrammed default
  2782                           ;	Brown Out Reset Selection bits
  2783                           ;	BOREN = 0x3, unprogrammed default
  2784                           ;	Internal External Switchover bit
  2785                           ;	IESO = 0x1, unprogrammed default
  2786                           ;	Fail-Safe Clock Monitor Enabled bit
  2787                           ;	FCMEN = 0x1, unprogrammed default
  2788                           ;	Low Voltage Programming Enable bit
  2789                           ;	LVP = 0x1, unprogrammed default
  2790                           ;	In-Circuit Debugger Mode bit
  2791                           ;	DEBUG = 0x1, unprogrammed default
  2792     2007                     	org	8199
  2793     2007  3FFF               	dw	16383
  2794                           
  2795                           ;Config register CONFIG2 @ 0x2008
  2796                           ;	unspecified, using default values
  2797                           ;	Brown-out Reset Selection bit
  2798                           ;	BOR4V = 0x1, unprogrammed default
  2799                           ;	Flash Program Memory Self Write Enable bits
  2800                           ;	WRT = 0x3, unprogrammed default
  2801     2008                     	org	8200
  2802     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     15      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    task_array.run	PTR FTN()void  size(1) Largest target is 0

    ?_create_task.run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    S497task$run	PTR FTN()void  size(1) Largest target is 0

    ISR_periodic_interrupt@task_array.run	PTR FTN()void  size(1) Largest target is 0

    ISR_periodic_interrupt@task_array	PTR volatile struct task size(1) Largest target is 40
		 -> task_array(BANK0[40]), 

    task_array.run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    create_task@run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    S23task$run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    to_create.run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _MAIN_ISR in COMMON

    _MAIN_ISR->_ISR_ADC_lecture_ready
    _MAIN_ISR->_ISR_periodic_interrupt
    _ISR_periodic_interrupt->i1___bmul
    _ISR_ADC_lecture_ready->_taskData_get_MaxNoise
    _ISR_ADC_lecture_ready->_taskData_set_Humidity
    _ISR_ADC_lecture_ready->_taskData_set_MaxNoise
    _ISR_ADC_lecture_ready->_taskData_set_Temperature

Critical Paths under _main in BANK0

    _main->_create_task
    _readTemperature->_taskData_setADC_ready
    _readTemperature->_taskData_set_ADC_CurrentTask
    _readNoise->_taskData_setADC_ready
    _readNoise->_taskData_set_ADC_CurrentTask
    _readHumidity->_taskData_setADC_ready
    _readHumidity->_taskData_set_ADC_CurrentTask

Critical Paths under _MAIN_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _MAIN_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MAIN_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MAIN_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1089
                                             10 BANK0      5     5      0
                             ___bmul
                        _create_task
                       _initHardware
                       _readHumidity *
                          _readNoise *
                    _readTemperature *
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      0     0      0      44
              _taskData_getADC_ready
              _taskData_setADC_ready
       _taskData_set_ADC_CurrentTask
 ---------------------------------------------------------------------------------
 (1) _readNoise                                            0     0      0      44
              _taskData_getADC_ready
              _taskData_setADC_ready
       _taskData_set_ADC_CurrentTask
 ---------------------------------------------------------------------------------
 (1) _readHumidity                                         0     0      0      44
              _taskData_getADC_ready
              _taskData_setADC_ready
       _taskData_set_ADC_CurrentTask
 ---------------------------------------------------------------------------------
 (2) _taskData_set_ADC_CurrentTask                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _taskData_setADC_ready                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _taskData_getADC_ready                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
                      _initADCmodule
                   _initTIMER1module
 ---------------------------------------------------------------------------------
 (2) _initTIMER1module                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADCmodule                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _create_task                                         10     5      5     593
                                              0 BANK0     10     5      5
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     230
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _MAIN_ISR                                             4     4      0     648
                                              8 COMMON     4     4      0
              _ISR_ADC_lecture_ready
             _ISR_periodic_interrupt
 ---------------------------------------------------------------------------------
 (4) _ISR_periodic_interrupt                               4     3      1     286
                                              4 COMMON     4     3      1
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _ISR_ADC_lecture_ready                                6     6      0     362
                                              2 COMMON     6     6      0
       _taskData_get_ADC_CurrentTask
              _taskData_get_MaxNoise
              _taskData_set_Humidity
              _taskData_set_MaxNoise
           _taskData_set_Temperature
            i1_taskData_setADC_ready
 ---------------------------------------------------------------------------------
 (5) i1_taskData_setADC_ready                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _taskData_set_Temperature                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_set_MaxNoise                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_set_Humidity                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_get_MaxNoise                                2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_get_ADC_CurrentTask                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _create_task
   _initHardware
     _initADCmodule
     _initTIMER1module
   _readHumidity *
     _taskData_getADC_ready
     _taskData_setADC_ready
     _taskData_set_ADC_CurrentTask
   _readNoise *
     _taskData_getADC_ready
     _taskData_setADC_ready
     _taskData_set_ADC_CurrentTask
   _readTemperature *
     _taskData_getADC_ready
     _taskData_setADC_ready
     _taskData_set_ADC_CurrentTask

 _MAIN_ISR (ROOT)
   _ISR_ADC_lecture_ready
     _taskData_get_ADC_CurrentTask
     _taskData_get_MaxNoise
     _taskData_set_Humidity
     _taskData_set_MaxNoise
     _taskData_set_Temperature
     i1_taskData_setADC_ready
   _ISR_periodic_interrupt
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec  5 21:01:05 2022

                                   pc 0002                 _taskData_getADC_ready 030E  
                      ___bmul@product 0050                                    l50 030F  
                                  l19 028C                                    l53 0309  
                                  l56 0303                          fp__readNoise 0030  
                                  l91 0225                                    l92 0228  
                                  l89 0221                                    l98 01FA  
                                  fsr 0004                                   l100 01FE  
                                 l101 0201                                   l110 01D8  
                                 l107 01D1                                   l141 02D9  
                                 l109 01D5                                   l135 024B  
                                 l138 02CC                                   l290 02A3  
                                 l980 030E                                   l984 0307  
                                 l986 0301                                   l998 0229  
                                 u300 02A2                                   u301 02A1  
                                 u230 0210                                   u231 020F  
                                 u240 0225                                   u241 0224  
                                 u250 01E9                                   u330 006F  
                                 u251 01E8                                   u260 01FE  
                                 u340 0092                                   u261 01FD  
                                 u270 01C0                                   u350 00C1  
                                 u271 01BF                                   u351 00C0  
                                 u280 01D5                                   u360 0106  
                                 u281 01D4                                   u361 0105  
                                 u290 0295                                   u291 0294  
                                 u355 00BD        __end_of_ISR_periodic_interrupt 01B0  
                    _initTIMER1module 02B9                                   fsr0 0004  
                                 indf 0000                                  l1000 023B  
                                l1010 0249                                  l1002 023F  
                                l1012 024A                                  l1004 0242  
                                l1020 02C1                                  l1100 021C  
                                l1006 0245                                  l1022 02C4  
                                l1014 02B9                                  l1110 01F5  
                                l1102 021D                                  l1008 0248  
                                l1024 02C7                                  l1016 02BE  
                                l1112 01F6                                  l1104 01D9  
                                l1120 01CC                                  l1130 0299  
                                l1026 02C9                                  l1018 02C0  
                                l1106 01DF                                  l1122 01CD  
                                l1114 01B0                                  l1132 029B  
                                l1124 0290                                  l1028 02CB  
                                l1108 01E9                                  l1116 01B6  
                                l1134 02A2                                  l1126 0291  
                                l1046 026F                                  l1118 01C0  
                                l1150 007E                                  l1128 0295  
                                l1048 027B                                  l1160 00C1  
                                l1152 00A1                                  l1144 0036  
                                l1090 02D7                                  l1162 00FA  
                                l1146 003B                                  l1092 02D8  
                                l1164 0100                                  l1148 005B  
                                l1094 0202                                  l1158 00A2  
                                l1088 02CD                                  l1096 0206  
                                l1098 0210                                  i1l24 025B  
                                i1l27 0264                                  i1l53 030D  
                                i1l62 02F6                                  i1l71 02EF  
                                i1l65 02E8                                  i1l59 0311  
                                i1l68 02FD                                  _TMR0 0001  
                                _main 0036                        create_task@run 0050  
                                btemp 007E                                  start 0010  
                       _initADCmodule 0229                     ___bmul@multiplier 0051  
              ?_ISR_ADC_lecture_ready 0070         __end_of_taskData_setADC_ready 030A  
                    __end_of_MAIN_ISR 026F                       fp__readHumidity 0033  
                               ?_main 0070                                 i1l172 0182  
                               i1l290 02B8                                 i1l178 01AF  
                               i1l778 0310                                 i1l990 02E2  
                               i1l992 02F7                                 i1l988 02F0  
                               i1l996 02E9                                 u20_20 02B7  
                               u20_21 02B6                                 u21_20 01AF  
                               u21_21 01AE                                 u22_20 0161  
                               u22_21 0160                                 u22_25 015D  
                               u31_20 0252                                 u31_21 0251  
                               u32_20 025F                                 u32_21 025E  
                               _TMR1H 000F                                 _TMR1L 000E  
                               u19_20 02AA                                 u19_21 02A9  
                               main@i 005C                                 fpbase 002C  
                    __end_ofi1___bmul 02B9                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                      ?_initADCmodule 0070                         ?_initHardware 0070  
                     __initialization 0013                ?_taskData_getADC_ready 0070  
                        __end_of_main 010A                                ??_main 0058  
                     _readTemperature 01D9                         ?_readHumidity 0070  
                              _ADRESH 001E                                _ADRESL 009E  
                              i1l1030 030B                                i1l1040 02B0  
                              i1l1032 02A5                                i1l1042 02B7  
                              i1l1034 02A6                                i1l1036 02AA  
                              i1l1060 01A5                                i1l1052 0184  
                              i1l1140 0252                                i1l1070 0114  
                              i1l1038 02AE                                i1l1062 01A9  
                              i1l1054 0187                                i1l1142 025F  
                              i1l1072 012D                                i1l1064 010A  
                              i1l1056 018B                                i1l1074 0146  
                              i1l1082 016B                                i1l1066 010D  
                              i1l1058 018D                                i1l1138 024C  
                              i1l1076 014E                                i1l1068 0113  
                              i1l1078 0161                                i1l1186 0177  
                    __end_of__fptable 0036                 _taskData_get_MaxNoise 02F7  
                      ??_initHardware 004E            taskData_set_Humidity@value 0070  
          ??_taskData_set_Temperature 0072                                ___bmul 028D  
                              fptable 0027                          __pdataCOMMON 007D  
                              fptotal 0006                        ??_readHumidity 004F  
                              saved_w 007E                             ?_MAIN_ISR 0070  
             __end_of__initialization 0023                       ??_initADCmodule 004E  
       __end_of_taskData_set_MaxNoise 02F0              __end_of_initTIMER1module 02CD  
                 ___bmul@multiplicand 004E         __end_of_taskData_set_Humidity 02F7  
                      __pcstackCOMMON 0070               i1_taskData_setADC_ready 030A  
             __end_of_readTemperature 0202                             ?i1___bmul 0070  
    ISR_periodic_interrupt@task_array 0076                        _OPTION_REGbits 0081  
                    i1___bmul@product 0072     taskData_set_ADC_CurrentTask@value 004E  
                          __pbssBANK0 0020                            ??_MAIN_ISR 0078  
              ?_taskData_get_MaxNoise 0070               ??_ISR_ADC_lecture_ready 0072  
                          __pmaintext 0036                               ?___bmul 004E  
                          __pintentry 0004                            ??i1___bmul 0071  
                __end_of_initHardware 02DA               ??_taskData_getADC_ready 004E  
    __end_of_taskData_set_Temperature 02E9             ??i1_taskData_setADC_ready 0070  
        ISR_ADC_lecture_ready@lecture 0076                  __end_of_readHumidity 0229  
             ISR_periodic_interrupt@i 0077                 _taskData_setADC_ready 0304  
                           _ANSELbits 0188                      ?_readTemperature 0070  
                             __ptext1 0202                               __ptext2 01B0  
                             __ptext3 01D9                               __ptext4 02FE  
                             __ptext5 0304                               __ptext6 030E  
                             __ptext7 02CD                               __ptext8 02B9  
                             __ptext9 0229                             _T1CONbits 0010  
                   __end_of_readNoise 01D9                   i1___bmul@multiplier 0073  
                             clrloop0 02DB                  end_of_initialization 0023  
                          _task_array 0026              ??_ISR_periodic_interrupt 0075  
                           _TRISAbits 0085                  create_task@to_create 0053  
          taskData_set_MaxNoise@value 0070                         ??_create_task 0053  
                   ?_initTIMER1module 0070                    ??_initTIMER1module 004E  
              ?_taskData_setADC_ready 0070                        __end_of___bmul 02A4  
                       __pidataCOMMON 0312                   start_initialization 0013  
           ?_taskData_set_Temperature 0070               ??_taskData_get_MaxNoise 0072  
   ISR_periodic_interrupt@task_amount 0074                 __end_of_initADCmodule 024C  
               _taskData_set_MaxNoise 02E9         __end_of_ISR_ADC_lecture_ready 0183  
                        _initHardware 02CD                   __end_of_create_task 028D  
                            ??___bmul 004F                 _taskData_set_Humidity 02F0  
                    _adc_current_task 007C                           __pbssCOMMON 007C  
                           ___latbits 0002                         __pcstackBANK0 004E  
                        _readHumidity 0202                     __size_of__fptable 000F  
                           _adc_ready 007D         __end_of_taskData_getADC_ready 0310  
                           __pfunctab 0027                             _readNoise 01B0  
                           _max_noise 0020                _ISR_periodic_interrupt 0183  
                            _MAIN_ISR 024C                     interrupt_function 0004  
                         _create_task 026F                             clear_ram0 02DA  
                            _PIE1bits 008C                ?_taskData_set_MaxNoise 0070  
               i1___bmul@multiplicand 0070                              _PIR1bits 000C  
              ?_taskData_set_Humidity 0070                              i1___bmul 02A4  
                          _ADCON0bits 001F                            _ADCON1bits 009F  
          taskData_setADC_ready@value 004E  __end_of_taskData_get_ADC_CurrentTask 0312  
        _taskData_get_ADC_CurrentTask 0310  __end_of_taskData_set_ADC_CurrentTask 0304  
        _taskData_set_ADC_CurrentTask 02FE                    fp__readTemperature 002D  
                          ?_readNoise 0070              ?i1_taskData_setADC_ready 0070  
             ??_taskData_setADC_ready 004E         taskData_set_Temperature@value 0070  
                            __fptable 0027                              __ptext10 026F  
                            __ptext11 028D                              __ptext20 02F7  
                            __ptext12 024C                              __ptext21 0310  
                            __ptext13 0183                              __ptext14 02A4  
                            __ptext15 010A                              __ptext16 030A  
                            __ptext17 02E2                              __ptext18 02E9  
                            __ptext19 02F0         ?_taskData_get_ADC_CurrentTask 0070  
       ?_taskData_set_ADC_CurrentTask 0070         __end_of_taskData_get_MaxNoise 02FE  
                            _humidity 0024                            _INTCONbits 000B  
     __end_ofi1_taskData_setADC_ready 030E                           ??_readNoise 004F  
                            intlevel1 0027                     ??_readTemperature 004F  
               _ISR_ADC_lecture_ready 010A              _taskData_set_Temperature 02E2  
                         _temperature 0022          i1taskData_setADC_ready@value 0070  
             ?_ISR_periodic_interrupt 0074               create_task@ticks_period 004E  
             ??_taskData_set_MaxNoise 0072                          ?_create_task 004E  
      ??_taskData_get_ADC_CurrentTask 0070        ??_taskData_set_ADC_CurrentTask 004E  
             ??_taskData_set_Humidity 0072  
