

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec  5 20:35:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	functab,global,class=ENTRY,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0089                     	;# 
   189     008C                     	;# 
   190     008D                     	;# 
   191     008E                     	;# 
   192     008F                     	;# 
   193     0090                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0094                     	;# 
   200     0095                     	;# 
   201     0096                     	;# 
   202     0097                     	;# 
   203     0098                     	;# 
   204     0099                     	;# 
   205     009A                     	;# 
   206     009B                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     0105                     	;# 
   212     0107                     	;# 
   213     0108                     	;# 
   214     0109                     	;# 
   215     010C                     	;# 
   216     010C                     	;# 
   217     010D                     	;# 
   218     010E                     	;# 
   219     010F                     	;# 
   220     0185                     	;# 
   221     0187                     	;# 
   222     0188                     	;# 
   223     0189                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     0000                     	;# 
   227     0001                     	;# 
   228     0002                     	;# 
   229     0003                     	;# 
   230     0004                     	;# 
   231     0005                     	;# 
   232     0006                     	;# 
   233     0007                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0089                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     008E                     	;# 
   268     008F                     	;# 
   269     0090                     	;# 
   270     0091                     	;# 
   271     0092                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0095                     	;# 
   277     0096                     	;# 
   278     0097                     	;# 
   279     0098                     	;# 
   280     0099                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009C                     	;# 
   284     009D                     	;# 
   285     009E                     	;# 
   286     009F                     	;# 
   287     0105                     	;# 
   288     0107                     	;# 
   289     0108                     	;# 
   290     0109                     	;# 
   291     010C                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     0185                     	;# 
   297     0187                     	;# 
   298     0188                     	;# 
   299     0189                     	;# 
   300     018C                     	;# 
   301     018D                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0009                     	;# 
   311     000A                     	;# 
   312     000B                     	;# 
   313     000C                     	;# 
   314     000D                     	;# 
   315     000E                     	;# 
   316     000E                     	;# 
   317     000F                     	;# 
   318     0010                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0015                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001B                     	;# 
   331     001B                     	;# 
   332     001C                     	;# 
   333     001D                     	;# 
   334     001E                     	;# 
   335     001F                     	;# 
   336     0081                     	;# 
   337     0085                     	;# 
   338     0086                     	;# 
   339     0087                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0009                     	;# 
   387     000A                     	;# 
   388     000B                     	;# 
   389     000C                     	;# 
   390     000D                     	;# 
   391     000E                     	;# 
   392     000E                     	;# 
   393     000F                     	;# 
   394     0010                     	;# 
   395     0011                     	;# 
   396     0012                     	;# 
   397     0013                     	;# 
   398     0014                     	;# 
   399     0015                     	;# 
   400     0015                     	;# 
   401     0016                     	;# 
   402     0017                     	;# 
   403     0018                     	;# 
   404     0019                     	;# 
   405     001A                     	;# 
   406     001B                     	;# 
   407     001B                     	;# 
   408     001C                     	;# 
   409     001D                     	;# 
   410     001E                     	;# 
   411     001F                     	;# 
   412     0081                     	;# 
   413     0085                     	;# 
   414     0086                     	;# 
   415     0087                     	;# 
   416     0089                     	;# 
   417     008C                     	;# 
   418     008D                     	;# 
   419     008E                     	;# 
   420     008F                     	;# 
   421     0090                     	;# 
   422     0091                     	;# 
   423     0092                     	;# 
   424     0093                     	;# 
   425     0093                     	;# 
   426     0093                     	;# 
   427     0094                     	;# 
   428     0095                     	;# 
   429     0096                     	;# 
   430     0097                     	;# 
   431     0098                     	;# 
   432     0099                     	;# 
   433     009A                     	;# 
   434     009B                     	;# 
   435     009C                     	;# 
   436     009D                     	;# 
   437     009E                     	;# 
   438     009F                     	;# 
   439     0105                     	;# 
   440     0107                     	;# 
   441     0108                     	;# 
   442     0109                     	;# 
   443     010C                     	;# 
   444     010C                     	;# 
   445     010D                     	;# 
   446     010E                     	;# 
   447     010F                     	;# 
   448     0185                     	;# 
   449     0187                     	;# 
   450     0188                     	;# 
   451     0189                     	;# 
   452     018C                     	;# 
   453     018D                     	;# 
   454     0000                     	;# 
   455     0001                     	;# 
   456     0002                     	;# 
   457     0003                     	;# 
   458     0004                     	;# 
   459     0005                     	;# 
   460     0006                     	;# 
   461     0007                     	;# 
   462     0009                     	;# 
   463     000A                     	;# 
   464     000B                     	;# 
   465     000C                     	;# 
   466     000D                     	;# 
   467     000E                     	;# 
   468     000E                     	;# 
   469     000F                     	;# 
   470     0010                     	;# 
   471     0011                     	;# 
   472     0012                     	;# 
   473     0013                     	;# 
   474     0014                     	;# 
   475     0015                     	;# 
   476     0015                     	;# 
   477     0016                     	;# 
   478     0017                     	;# 
   479     0018                     	;# 
   480     0019                     	;# 
   481     001A                     	;# 
   482     001B                     	;# 
   483     001B                     	;# 
   484     001C                     	;# 
   485     001D                     	;# 
   486     001E                     	;# 
   487     001F                     	;# 
   488     0081                     	;# 
   489     0085                     	;# 
   490     0086                     	;# 
   491     0087                     	;# 
   492     0089                     	;# 
   493     008C                     	;# 
   494     008D                     	;# 
   495     008E                     	;# 
   496     008F                     	;# 
   497     0090                     	;# 
   498     0091                     	;# 
   499     0092                     	;# 
   500     0093                     	;# 
   501     0093                     	;# 
   502     0093                     	;# 
   503     0094                     	;# 
   504     0095                     	;# 
   505     0096                     	;# 
   506     0097                     	;# 
   507     0098                     	;# 
   508     0099                     	;# 
   509     009A                     	;# 
   510     009B                     	;# 
   511     009C                     	;# 
   512     009D                     	;# 
   513     009E                     	;# 
   514     009F                     	;# 
   515     0105                     	;# 
   516     0107                     	;# 
   517     0108                     	;# 
   518     0109                     	;# 
   519     010C                     	;# 
   520     010C                     	;# 
   521     010D                     	;# 
   522     010E                     	;# 
   523     010F                     	;# 
   524     0185                     	;# 
   525     0187                     	;# 
   526     0188                     	;# 
   527     0189                     	;# 
   528     018C                     	;# 
   529     018D                     	;# 
   530                           
   531                           	psect	idataCOMMON
   532     02BC                     __pidataCOMMON:
   533                           
   534                           ;initializer for _adc_ready
   535     02BC  3401               	retlw	1
   536     001E                     _ADRESH	set	30
   537     000F                     _TMR1H	set	15
   538     000E                     _TMR1L	set	14
   539     0010                     _T1CONbits	set	16
   540     0001                     _TMR0	set	1
   541     000B                     _INTCONbits	set	11
   542     001F                     _ADCON0bits	set	31
   543     000C                     _PIR1bits	set	12
   544     009E                     _ADRESL	set	158
   545     0081                     _OPTION_REGbits	set	129
   546     008C                     _PIE1bits	set	140
   547     009F                     _ADCON1bits	set	159
   548     0085                     _TRISAbits	set	133
   549     0188                     _ANSELbits	set	392
   550                           
   551                           	psect	cinit
   552     0013                     start_initialization:	
   553                           ; #config settings
   554                           
   555     0013                     __initialization:
   556                           
   557                           ; Initialize objects allocated to COMMON
   558     0013  120A  118A  22BC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   559     0018  00FD               	movwf	__pdataCOMMON& (0+127)
   560                           
   561                           ; Clear objects allocated to BANK0
   562     0019  1383               	bcf	3,7	;select IRP bank0
   563     001A  3020               	movlw	low __pbssBANK0
   564     001B  0084               	movwf	4
   565     001C  304E               	movlw	low (__pbssBANK0+46)
   566     001D  120A  118A  2284  120A  118A  	fcall	clear_ram0
   567                           
   568                           ; Clear objects allocated to COMMON
   569     0022  01FC               	clrf	__pbssCOMMON& (0+127)
   570     0023                     end_of_initialization:	
   571                           ;End of C runtime variable initialization code
   572                           
   573     0023                     __end_of__initialization:
   574     0023  0183               	clrf	3
   575     0024  120A  118A  2836   	ljmp	_main	;jump to C main() function
   576                           
   577                           	psect	bssCOMMON
   578     007C                     __pbssCOMMON:
   579     007C                     _adc_current_task:
   580     007C                     	ds	1
   581                           
   582                           	psect	dataCOMMON
   583     007D                     __pdataCOMMON:
   584     007D                     _adc_ready:
   585     007D                     	ds	1
   586                           
   587                           	psect	bssBANK0
   588     0020                     __pbssBANK0:
   589     0020                     _max_noise:
   590     0020                     	ds	2
   591     0022                     _temperature:
   592     0022                     	ds	2
   593     0024                     _humidity:
   594     0024                     	ds	2
   595     0026                     _task_array:
   596     0026                     	ds	40
   597                           
   598                           	psect	clrtext
   599     0284                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603     0284  0064               	clrwdt	;clear the watchdog before getting into this loop
   604     0285                     clrloop0:
   605     0285  0180               	clrf	0	;clear RAM location pointed to by FSR
   606     0286  0A84               	incf	4,f	;increment pointer
   607     0287  0604               	xorwf	4,w	;XOR with final address
   608     0288  1903               	btfsc	3,2	;have we reached the end yet?
   609     0289  3400               	retlw	0	;all done for this memory range, return
   610     028A  0604               	xorwf	4,w	;XOR again to restore value
   611     028B  2A85               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackCOMMON
   614     0070                     __pcstackCOMMON:
   615     0070                     ?_ISR_periodic_interrupt:
   616     0070                     ?_ISR_ADC_lecture_ready:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?_initHardware:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_readNoise:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_readTemperature:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_readHumidity:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_MAIN_ISR:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_main:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_taskData_getADC_ready:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_taskData_setADC_ready:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_taskData_set_ADC_CurrentTask:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_taskData_get_ADC_CurrentTask:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ??_taskData_get_ADC_CurrentTask:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_taskData_set_Humidity:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_taskData_set_Temperature:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_taskData_set_MaxNoise:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_initADCmodule:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_initTIMER1module:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?i1_taskData_setADC_ready:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ??i1_taskData_setADC_ready:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_taskData_get_MaxNoise:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ISR_periodic_interrupt@task_amount:	
   677                           ; 2 bytes @ 0x0
   678                           
   679     0070                     i1taskData_setADC_ready@value:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     taskData_set_Humidity@value:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     taskData_set_Temperature@value:	
   686                           ; 2 bytes @ 0x0
   687                           
   688     0070                     taskData_set_MaxNoise@value:	
   689                           ; 2 bytes @ 0x0
   690                           
   691                           
   692                           ; 2 bytes @ 0x0
   693     0070                     	ds	1
   694     0071                     ??_ISR_periodic_interrupt:
   695                           
   696                           ; 1 bytes @ 0x1
   697     0071                     	ds	1
   698     0072                     ??_ISR_ADC_lecture_ready:
   699     0072                     ??_taskData_set_Humidity:	
   700                           ; 1 bytes @ 0x2
   701                           
   702     0072                     ??_taskData_set_Temperature:	
   703                           ; 1 bytes @ 0x2
   704                           
   705     0072                     ??_taskData_get_MaxNoise:	
   706                           ; 1 bytes @ 0x2
   707                           
   708     0072                     ??_taskData_set_MaxNoise:	
   709                           ; 1 bytes @ 0x2
   710                           
   711     0072                     ISR_periodic_interrupt@task_array:	
   712                           ; 1 bytes @ 0x2
   713                           
   714                           
   715                           ; 1 bytes @ 0x2
   716     0072                     	ds	1
   717     0073                     ISR_periodic_interrupt@i:
   718                           
   719                           ; 1 bytes @ 0x3
   720     0073                     	ds	3
   721     0076                     ISR_ADC_lecture_ready@lecture:
   722                           
   723                           ; 2 bytes @ 0x6
   724     0076                     	ds	2
   725     0078                     ??_MAIN_ISR:
   726                           
   727                           ; 1 bytes @ 0x8
   728     0078                     	ds	4
   729                           
   730                           	psect	cstackBANK0
   731     004E                     __pcstackBANK0:
   732     004E                     ??_initHardware:
   733     004E                     ??_taskData_getADC_ready:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     004E                     ??_taskData_setADC_ready:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     004E                     ??_taskData_set_ADC_CurrentTask:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     004E                     ??_initADCmodule:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     004E                     ??_initTIMER1module:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     004E                     ?___bmul:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     004E                     ?_create_task:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     004E                     taskData_setADC_ready@value:	
   755                           ; 5 bytes @ 0x0
   756                           
   757     004E                     taskData_set_ADC_CurrentTask@value:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     004E                     ___bmul@multiplicand:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     004E                     create_task@ticks_period:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 2 bytes @ 0x0
   768     004E                     	ds	1
   769     004F                     ??_readNoise:
   770     004F                     ??_readTemperature:	
   771                           ; 1 bytes @ 0x1
   772                           
   773     004F                     ??_readHumidity:	
   774                           ; 1 bytes @ 0x1
   775                           
   776     004F                     ??___bmul:	
   777                           ; 1 bytes @ 0x1
   778                           
   779                           
   780                           ; 1 bytes @ 0x1
   781     004F                     	ds	1
   782     0050                     create_task@run:
   783     0050                     ___bmul@product:	
   784                           ; 1 bytes @ 0x2
   785                           
   786                           
   787                           ; 1 bytes @ 0x2
   788     0050                     	ds	1
   789     0051                     ___bmul@multiplier:
   790                           
   791                           ; 1 bytes @ 0x3
   792     0051                     	ds	2
   793     0053                     ??_create_task:
   794     0053                     create_task@to_create:	
   795                           ; 1 bytes @ 0x5
   796                           
   797                           
   798                           ; 5 bytes @ 0x5
   799     0053                     	ds	5
   800     0058                     ??_main:
   801                           
   802                           ; 1 bytes @ 0xA
   803     0058                     	ds	4
   804     005C                     main@i:
   805                           
   806                           ; 1 bytes @ 0xE
   807     005C                     	ds	1
   808                           
   809                           	psect	maintext
   810     0036                     __pmaintext:	
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 23 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  i               1   14[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       1       0       0       0
   832 ;;      Temps:          0       4       0       0       0
   833 ;;      Totals:         0       5       0       0       0
   834 ;;Total ram usage:        5 bytes
   835 ;; Hardware stack levels required when called: 5
   836 ;; This function calls:
   837 ;;		___bmul
   838 ;;		_create_task
   839 ;;		_initHardware
   840 ;;		_readHumidity
   841 ;;		_readNoise
   842 ;;		_readTemperature
   843 ;; This function is called by:
   844 ;;		Startup code after reset
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848     0036                     _main:	
   849                           ;psect for function _main
   850                           
   851     0036                     l1108:	
   852                           ;incstack = 0
   853                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   854                           
   855                           
   856                           ;main.c: 24:     initHardware();
   857     0036  120A  118A  226A  120A  118A  	fcall	_initHardware
   858     003B                     l1110:
   859                           
   860                           ;main.c: 29:     task_array[0] = create_task(1,readNoise);
   861     003B  3001               	movlw	1
   862     003C  1283               	bcf	3,5	;RP0=0, select bank0
   863     003D  1303               	bcf	3,6	;RP1=0, select bank0
   864     003E  00CE               	movwf	create_task@ticks_period
   865     003F  3000               	movlw	0
   866     0040  00CF               	movwf	create_task@ticks_period+1
   867     0041  3004               	movlw	(low (fp__readNoise-fpbase))& (0+255)
   868     0042  00D0               	movwf	create_task@run
   869     0043  120A  118A  2277  120A  118A  	fcall	_create_task
   870     0048  3026               	movlw	_task_array& (0+255)
   871     0049  0084               	movwf	4
   872     004A  1283               	bcf	3,5	;RP0=0, select bank0
   873     004B  1303               	bcf	3,6	;RP1=0, select bank0
   874     004C  084E               	movf	?_create_task,w
   875     004D  1383               	bcf	3,7	;select IRP bank0
   876     004E  0080               	movwf	0
   877     004F  0A84               	incf	4,f
   878     0050  084F               	movf	?_create_task+1,w
   879     0051  0080               	movwf	0
   880     0052  0A84               	incf	4,f
   881     0053  0850               	movf	?_create_task+2,w
   882     0054  0080               	movwf	0
   883     0055  0A84               	incf	4,f
   884     0056  0851               	movf	?_create_task+3,w
   885     0057  0080               	movwf	0
   886     0058  0A84               	incf	4,f
   887     0059  0852               	movf	?_create_task+4,w
   888     005A  0080               	movwf	0
   889     005B                     l1112:
   890                           
   891                           ;main.c: 31:     task_array[2] = create_task(500,readTemperature);
   892     005B  30F4               	movlw	244
   893     005C  00CE               	movwf	create_task@ticks_period
   894     005D  3001               	movlw	1
   895     005E  00CF               	movwf	create_task@ticks_period+1
   896     005F  3001               	movlw	(low (fp__readTemperature-fpbase))& (0+255)
   897     0060  00D0               	movwf	create_task@run
   898     0061  120A  118A  2277  120A  118A  	fcall	_create_task
   899     0066  1283               	bcf	3,5	;RP0=0, select bank0
   900     0067  1303               	bcf	3,6	;RP1=0, select bank0
   901     0068  304E               	movlw	?_create_task& (0+255)
   902     0069  0084               	movwf	4
   903     006A  300A               	movlw	10
   904     006B  3E26               	addlw	(low (_task_array| 0))& (0+255)
   905     006C  00D8               	movwf	??_main
   906     006D  3005               	movlw	5
   907     006E  00D9               	movwf	??_main+1
   908     006F                     u290:
   909     006F  1383               	bcf	3,7	;select IRP bank0
   910     0070  0800               	movf	0,w
   911     0071  00DA               	movwf	??_main+2
   912     0072  0A04               	incf	4,w
   913     0073  00DB               	movwf	??_main+3
   914     0074  0858               	movf	??_main,w
   915     0075  0084               	movwf	4
   916     0076  085A               	movf	??_main+2,w
   917     0077  0080               	movwf	0
   918     0078  0A04               	incf	4,w
   919     0079  00D8               	movwf	??_main
   920     007A  085B               	movf	??_main+3,w
   921     007B  0084               	movwf	4
   922     007C  0BD9               	decfsz	??_main+1,f
   923     007D  286F               	goto	u290
   924     007E                     l1114:
   925                           
   926                           ;main.c: 32:     task_array[3] = create_task(500,readHumidity);
   927     007E  30F4               	movlw	244
   928     007F  00CE               	movwf	create_task@ticks_period
   929     0080  3001               	movlw	1
   930     0081  00CF               	movwf	create_task@ticks_period+1
   931     0082  3007               	movlw	(low (fp__readHumidity-fpbase))& (0+255)
   932     0083  00D0               	movwf	create_task@run
   933     0084  120A  118A  2277  120A  118A  	fcall	_create_task
   934     0089  1283               	bcf	3,5	;RP0=0, select bank0
   935     008A  1303               	bcf	3,6	;RP1=0, select bank0
   936     008B  304E               	movlw	?_create_task& (0+255)
   937     008C  0084               	movwf	4
   938     008D  300F               	movlw	15
   939     008E  3E26               	addlw	(low (_task_array| 0))& (0+255)
   940     008F  00D8               	movwf	??_main
   941     0090  3005               	movlw	5
   942     0091  00D9               	movwf	??_main+1
   943     0092                     u300:
   944     0092  1383               	bcf	3,7	;select IRP bank0
   945     0093  0800               	movf	0,w
   946     0094  00DA               	movwf	??_main+2
   947     0095  0A04               	incf	4,w
   948     0096  00DB               	movwf	??_main+3
   949     0097  0858               	movf	??_main,w
   950     0098  0084               	movwf	4
   951     0099  085A               	movf	??_main+2,w
   952     009A  0080               	movwf	0
   953     009B  0A04               	incf	4,w
   954     009C  00D8               	movwf	??_main
   955     009D  085B               	movf	??_main+3,w
   956     009E  0084               	movwf	4
   957     009F  0BD9               	decfsz	??_main+1,f
   958     00A0  2892               	goto	u300
   959     00A1                     l1116:
   960                           
   961                           ;main.c: 44:         for(char i = 0; i < 3; i++){
   962     00A1  01DC               	clrf	main@i
   963     00A2                     l1122:
   964                           
   965                           ;main.c: 45:             if(task_array[i].ticks_left <= 0){
   966     00A2  3005               	movlw	5
   967     00A3  00CE               	movwf	___bmul@multiplicand
   968     00A4  085C               	movf	main@i,w
   969     00A5  120A  118A  223F  120A  118A  	fcall	___bmul
   970     00AA  3E26               	addlw	(low (_task_array| 0))& (0+255)
   971     00AB  0084               	movwf	4
   972     00AC  1383               	bcf	3,7	;select IRP bank0
   973     00AD  0800               	movf	0,w
   974     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   975     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   976     00B0  00D8               	movwf	??_main
   977     00B1  0A84               	incf	4,f
   978     00B2  0800               	movf	0,w
   979     00B3  00D9               	movwf	??_main+1
   980     00B4  0859               	movf	??_main+1,w
   981     00B5  3A80               	xorlw	128
   982     00B6  00FF               	movwf	btemp+1
   983     00B7  3080               	movlw	128
   984     00B8  027F               	subwf	btemp+1,w
   985     00B9  1D03               	skipz
   986     00BA  28BD               	goto	u315
   987     00BB  3001               	movlw	1
   988     00BC  0258               	subwf	??_main,w
   989     00BD                     u315:
   990     00BD  1803               	skipnc
   991     00BE  28C0               	goto	u311
   992     00BF  28C1               	goto	u310
   993     00C0                     u311:
   994     00C0  28D4               	goto	l1126
   995     00C1                     u310:
   996     00C1                     l1124:
   997                           
   998                           ;main.c: 46:                 task_array[i].run();
   999     00C1  3005               	movlw	5
  1000     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1001     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1002     00C4  00CE               	movwf	___bmul@multiplicand
  1003     00C5  085C               	movf	main@i,w
  1004     00C6  120A  118A  223F  120A  118A  	fcall	___bmul
  1005     00CB  3E2A               	addlw	(low ((_task_array| 0+4)))& (0+255)
  1006     00CC  0084               	movwf	4
  1007     00CD  1383               	bcf	3,7	;select IRP bank0
  1008     00CE  0800               	movf	0,w
  1009     00CF  120A  118A  2027  120A  118A  	fcall	fptable
  1010     00D4                     l1126:
  1011                           
  1012                           ;main.c: 48:         }
  1013     00D4  3001               	movlw	1
  1014     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1015     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1016     00D7  00D8               	movwf	??_main
  1017     00D8  0858               	movf	??_main,w
  1018     00D9  07DC               	addwf	main@i,f
  1019     00DA                     l1128:
  1020     00DA  3003               	movlw	3
  1021     00DB  025C               	subwf	main@i,w
  1022     00DC  1C03               	skipc
  1023     00DD  28DF               	goto	u321
  1024     00DE  28E0               	goto	u320
  1025     00DF                     u321:
  1026     00DF  28A2               	goto	l1122
  1027     00E0                     u320:
  1028     00E0  28A1               	goto	l1116
  1029     00E1  120A  118A  2810   	ljmp	start
  1030     00E4                     __end_of_main:
  1031                           
  1032                           	psect	text1
  1033     01AF                     __ptext1:	
  1034 ;; *************** function _readHumidity *****************
  1035 ;; Defined at:
  1036 ;;		line 4 in file "tasks.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 4
  1057 ;; This function calls:
  1058 ;;		_taskData_getADC_ready
  1059 ;;		_taskData_setADC_ready
  1060 ;;		_taskData_set_ADC_CurrentTask
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066     01AF                     _readHumidity:	
  1067                           ;psect for function _readHumidity
  1068                           
  1069     01AF                     l1058:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _readHumidity: [wreg+status,2+status,0+pclath+cstack]
  1072                           
  1073                           
  1074                           ;tasks.c: 5:     ADCON0bits.CHS = 0b0000;
  1075     01AF  30C3               	movlw	-61
  1076     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1077     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1078     01B2  059F               	andwf	31,f	;volatile
  1079     01B3                     l1060:	
  1080                           ;tasks.c: 7:     while(taskData_getADC_ready() == 0);
  1081                           
  1082     01B3  120A  118A  22B8  120A  118A  	fcall	_taskData_getADC_ready
  1083     01B8  3A00               	xorlw	0
  1084     01B9  1903               	skipnz
  1085     01BA  29BC               	goto	u191
  1086     01BB  29BD               	goto	u190
  1087     01BC                     u191:
  1088     01BC  29B3               	goto	l1060
  1089     01BD                     u190:
  1090     01BD                     l1062:
  1091                           
  1092                           ;tasks.c: 8:     taskData_setADC_ready(0);
  1093     01BD  3000               	movlw	0
  1094     01BE  120A  118A  22AE  120A  118A  	fcall	_taskData_setADC_ready
  1095                           
  1096                           ;tasks.c: 9:     taskData_set_ADC_CurrentTask(0);
  1097     01C3  3000               	movlw	0
  1098     01C4  120A  118A  22A8  120A  118A  	fcall	_taskData_set_ADC_CurrentTask
  1099     01C9                     l1064:
  1100                           
  1101                           ;tasks.c: 11:     INTCONbits.T0IF = 0;
  1102     01C9  110B               	bcf	11,2	;volatile
  1103     01CA                     l1066:
  1104                           
  1105                           ;tasks.c: 12:     TMR0 = 231;
  1106     01CA  30E7               	movlw	231
  1107     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1108     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1109     01CD  0081               	movwf	1	;volatile
  1110     01CE                     l89:	
  1111                           ;tasks.c: 13:     while(INTCONbits.T0IF == 0);
  1112                           
  1113     01CE  1D0B               	btfss	11,2	;volatile
  1114     01CF  29D1               	goto	u201
  1115     01D0  29D2               	goto	u200
  1116     01D1                     u201:
  1117     01D1  29CE               	goto	l89
  1118     01D2                     u200:
  1119     01D2                     l91:
  1120                           
  1121                           ;tasks.c: 15:     ADCON0bits.GO=1;
  1122     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1123     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1124     01D4  149F               	bsf	31,1	;volatile
  1125     01D5                     l92:
  1126     01D5  0008               	return
  1127     01D6                     __end_of_readHumidity:
  1128                           
  1129                           	psect	text2
  1130     015D                     __ptext2:	
  1131 ;; *************** function _readNoise *****************
  1132 ;; Defined at:
  1133 ;;		line 32 in file "tasks.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 4
  1154 ;; This function calls:
  1155 ;;		_taskData_getADC_ready
  1156 ;;		_taskData_setADC_ready
  1157 ;;		_taskData_set_ADC_CurrentTask
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163     015D                     _readNoise:	
  1164                           ;psect for function _readNoise
  1165                           
  1166     015D                     l1078:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _readNoise: [wreg+status,2+status,0+pclath+cstack]
  1169                           
  1170                           
  1171                           ;tasks.c: 33:     ADCON0bits.CHS = 0b0010;
  1172     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1173     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1174     015F  081F               	movf	31,w	;volatile
  1175     0160  39C3               	andlw	-61
  1176     0161  3808               	iorlw	8
  1177     0162  009F               	movwf	31	;volatile
  1178     0163                     l1080:	
  1179                           ;tasks.c: 35:     while(taskData_getADC_ready() == 0);
  1180                           
  1181     0163  120A  118A  22B8  120A  118A  	fcall	_taskData_getADC_ready
  1182     0168  3A00               	xorlw	0
  1183     0169  1903               	skipnz
  1184     016A  296C               	goto	u231
  1185     016B  296D               	goto	u230
  1186     016C                     u231:
  1187     016C  2963               	goto	l1080
  1188     016D                     u230:
  1189     016D                     l1082:
  1190                           
  1191                           ;tasks.c: 36:     taskData_setADC_ready(0);
  1192     016D  3000               	movlw	0
  1193     016E  120A  118A  22AE  120A  118A  	fcall	_taskData_setADC_ready
  1194                           
  1195                           ;tasks.c: 37:     taskData_set_ADC_CurrentTask(2);
  1196     0173  3002               	movlw	2
  1197     0174  120A  118A  22A8  120A  118A  	fcall	_taskData_set_ADC_CurrentTask
  1198     0179                     l1084:
  1199                           
  1200                           ;tasks.c: 39:     INTCONbits.T0IF = 0;
  1201     0179  110B               	bcf	11,2	;volatile
  1202     017A                     l1086:
  1203                           
  1204                           ;tasks.c: 40:     TMR0 = 231;
  1205     017A  30E7               	movlw	231
  1206     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1207     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1208     017D  0081               	movwf	1	;volatile
  1209     017E                     l107:	
  1210                           ;tasks.c: 41:     while(INTCONbits.T0IF == 0);
  1211                           
  1212     017E  1D0B               	btfss	11,2	;volatile
  1213     017F  2981               	goto	u241
  1214     0180  2982               	goto	u240
  1215     0181                     u241:
  1216     0181  297E               	goto	l107
  1217     0182                     u240:
  1218     0182                     l109:
  1219                           
  1220                           ;tasks.c: 43:     ADCON0bits.GO=1;
  1221     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1222     0183  1303               	bcf	3,6	;RP1=0, select bank0
  1223     0184  149F               	bsf	31,1	;volatile
  1224     0185                     l110:
  1225     0185  0008               	return
  1226     0186                     __end_of_readNoise:
  1227                           
  1228                           	psect	text3
  1229     0186                     __ptext3:	
  1230 ;; *************** function _readTemperature *****************
  1231 ;; Defined at:
  1232 ;;		line 18 in file "tasks.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0
  1249 ;;      Totals:         0       0       0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 4
  1253 ;; This function calls:
  1254 ;;		_taskData_getADC_ready
  1255 ;;		_taskData_setADC_ready
  1256 ;;		_taskData_set_ADC_CurrentTask
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262     0186                     _readTemperature:	
  1263                           ;psect for function _readTemperature
  1264                           
  1265     0186                     l1068:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _readTemperature: [wreg+status,2+status,0+pclath+cstack]
  1268                           
  1269                           
  1270                           ;tasks.c: 19:     ADCON0bits.CHS = 0b0001;
  1271     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1272     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1273     0188  081F               	movf	31,w	;volatile
  1274     0189  39C3               	andlw	-61
  1275     018A  3804               	iorlw	4
  1276     018B  009F               	movwf	31	;volatile
  1277     018C                     l1070:	
  1278                           ;tasks.c: 21:     while(taskData_getADC_ready() == 0);
  1279                           
  1280     018C  120A  118A  22B8  120A  118A  	fcall	_taskData_getADC_ready
  1281     0191  3A00               	xorlw	0
  1282     0192  1903               	skipnz
  1283     0193  2995               	goto	u211
  1284     0194  2996               	goto	u210
  1285     0195                     u211:
  1286     0195  298C               	goto	l1070
  1287     0196                     u210:
  1288     0196                     l1072:
  1289                           
  1290                           ;tasks.c: 22:     taskData_setADC_ready(0);
  1291     0196  3000               	movlw	0
  1292     0197  120A  118A  22AE  120A  118A  	fcall	_taskData_setADC_ready
  1293                           
  1294                           ;tasks.c: 23:     taskData_set_ADC_CurrentTask(1);
  1295     019C  3001               	movlw	1
  1296     019D  120A  118A  22A8  120A  118A  	fcall	_taskData_set_ADC_CurrentTask
  1297     01A2                     l1074:
  1298                           
  1299                           ;tasks.c: 25:     INTCONbits.T0IF = 0;
  1300     01A2  110B               	bcf	11,2	;volatile
  1301     01A3                     l1076:
  1302                           
  1303                           ;tasks.c: 26:     TMR0 = 231;
  1304     01A3  30E7               	movlw	231
  1305     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1306     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1307     01A6  0081               	movwf	1	;volatile
  1308     01A7                     l98:	
  1309                           ;tasks.c: 27:     while(INTCONbits.T0IF == 0);
  1310                           
  1311     01A7  1D0B               	btfss	11,2	;volatile
  1312     01A8  29AA               	goto	u221
  1313     01A9  29AB               	goto	u220
  1314     01AA                     u221:
  1315     01AA  29A7               	goto	l98
  1316     01AB                     u220:
  1317     01AB                     l100:
  1318                           
  1319                           ;tasks.c: 29:     ADCON0bits.GO=1;
  1320     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1321     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1322     01AD  149F               	bsf	31,1	;volatile
  1323     01AE                     l101:
  1324     01AE  0008               	return
  1325     01AF                     __end_of_readTemperature:
  1326                           
  1327                           	psect	text4
  1328     02A8                     __ptext4:	
  1329 ;; *************** function _taskData_set_ADC_CurrentTask *****************
  1330 ;; Defined at:
  1331 ;;		line 15 in file "taskData.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  value           1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  value           1    0[BANK0 ] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       1       0       0       0
  1347 ;;      Temps:          0       0       0       0       0
  1348 ;;      Totals:         0       1       0       0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 3
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_readHumidity
  1356 ;;		_readTemperature
  1357 ;;		_readNoise
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361     02A8                     _taskData_set_ADC_CurrentTask:	
  1362                           ;psect for function _taskData_set_ADC_CurrentTask
  1363                           
  1364                           
  1365                           ;incstack = 0
  1366                           ; Regs used in _taskData_set_ADC_CurrentTask: [wreg]
  1367                           ;taskData_set_ADC_CurrentTask@value stored from wreg
  1368     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1369     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1370     02AA  00CE               	movwf	taskData_set_ADC_CurrentTask@value
  1371     02AB                     l968:
  1372                           
  1373                           ;taskData.c: 16:     adc_current_task = value;
  1374     02AB  084E               	movf	taskData_set_ADC_CurrentTask@value,w
  1375     02AC  00FC               	movwf	_adc_current_task
  1376     02AD                     l56:
  1377     02AD  0008               	return
  1378     02AE                     __end_of_taskData_set_ADC_CurrentTask:
  1379                           
  1380                           	psect	text5
  1381     02AE                     __ptext5:	
  1382 ;; *************** function _taskData_setADC_ready *****************
  1383 ;; Defined at:
  1384 ;;		line 12 in file "taskData.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  value           1    wreg     unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  value           1    0[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       1       0       0       0
  1400 ;;      Temps:          0       0       0       0       0
  1401 ;;      Totals:         0       1       0       0       0
  1402 ;;Total ram usage:        1 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 3
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_readHumidity
  1409 ;;		_readTemperature
  1410 ;;		_readNoise
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414     02AE                     _taskData_setADC_ready:	
  1415                           ;psect for function _taskData_setADC_ready
  1416                           
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _taskData_setADC_ready: [wreg]
  1420                           ;taskData_setADC_ready@value stored from wreg
  1421     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1422     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1423     02B0  00CE               	movwf	taskData_setADC_ready@value
  1424     02B1                     l966:
  1425                           
  1426                           ;taskData.c: 13:     adc_ready = value;
  1427     02B1  084E               	movf	taskData_setADC_ready@value,w
  1428     02B2  00FD               	movwf	_adc_ready
  1429     02B3                     l53:
  1430     02B3  0008               	return
  1431     02B4                     __end_of_taskData_setADC_ready:
  1432                           
  1433                           	psect	text6
  1434     02B8                     __ptext6:	
  1435 ;; *************** function _taskData_getADC_ready *****************
  1436 ;; Defined at:
  1437 ;;		line 9 in file "taskData.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 3
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_readHumidity
  1462 ;;		_readTemperature
  1463 ;;		_readNoise
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467     02B8                     _taskData_getADC_ready:	
  1468                           ;psect for function _taskData_getADC_ready
  1469                           
  1470     02B8                     l962:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _taskData_getADC_ready: [wreg]
  1473                           
  1474                           
  1475                           ;taskData.c: 10:     return adc_ready;
  1476     02B8  087D               	movf	_adc_ready,w
  1477     02B9                     l50:
  1478     02B9  0008               	return
  1479     02BA                     __end_of_taskData_getADC_ready:
  1480                           
  1481                           	psect	text7
  1482     026A                     __ptext7:	
  1483 ;; *************** function _initHardware *****************
  1484 ;; Defined at:
  1485 ;;		line 44 in file "hardware.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 4
  1506 ;; This function calls:
  1507 ;;		_initADCmodule
  1508 ;;		_initTIMER1module
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514     026A                     _initHardware:	
  1515                           ;psect for function _initHardware
  1516                           
  1517     026A                     l1052:	
  1518                           ;incstack = 0
  1519                           ; Regs used in _initHardware: [wreg+status,2+status,0+pclath+cstack]
  1520                           
  1521                           
  1522                           ;hardware.c: 45:     initADCmodule();
  1523     026A  120A  118A  21D6  120A  118A  	fcall	_initADCmodule
  1524                           
  1525                           ;hardware.c: 46:     initTIMER1module();
  1526     026F  120A  118A  2256  120A  118A  	fcall	_initTIMER1module
  1527     0274                     l1054:
  1528                           
  1529                           ;hardware.c: 48:     INTCONbits.PEIE = 1;
  1530     0274  170B               	bsf	11,6	;volatile
  1531     0275                     l1056:
  1532                           
  1533                           ;hardware.c: 49:     INTCONbits.GIE = 1;
  1534     0275  178B               	bsf	11,7	;volatile
  1535     0276                     l141:
  1536     0276  0008               	return
  1537     0277                     __end_of_initHardware:
  1538                           
  1539                           	psect	text8
  1540     0256                     __ptext8:	
  1541 ;; *************** function _initTIMER1module *****************
  1542 ;; Defined at:
  1543 ;;		line 29 in file "hardware.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 3
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_initHardware
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571     0256                     _initTIMER1module:	
  1572                           ;psect for function _initTIMER1module
  1573                           
  1574     0256                     l996:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _initTIMER1module: [wreg+status,2+status,0]
  1577                           
  1578                           
  1579                           ;hardware.c: 30:     T1CONbits.TMR1GE = 0;
  1580     0256  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0257  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0258  1310               	bcf	16,6	;volatile
  1583                           
  1584                           ;hardware.c: 31:     T1CONbits.TMR1ON = 0;
  1585     0259  1010               	bcf	16,0	;volatile
  1586                           
  1587                           ;hardware.c: 32:     T1CONbits.TMR1CS = 0;
  1588     025A  1090               	bcf	16,1	;volatile
  1589     025B                     l998:
  1590                           
  1591                           ;hardware.c: 33:     T1CONbits.T1CKPS = 0b00;
  1592     025B  30CF               	movlw	-49
  1593     025C  0590               	andwf	16,f	;volatile
  1594     025D                     l1000:
  1595                           
  1596                           ;hardware.c: 34:     T1CONbits.T1INSYNC = 0;
  1597     025D  1110               	bcf	16,2	;volatile
  1598     025E                     l1002:
  1599                           
  1600                           ;hardware.c: 35:     PIE1bits.TMR1IE = 1;
  1601     025E  1683               	bsf	3,5	;RP0=1, select bank1
  1602     025F  1303               	bcf	3,6	;RP1=0, select bank1
  1603     0260  140C               	bsf	12,0	;volatile
  1604     0261                     l1004:
  1605                           
  1606                           ;hardware.c: 36:     PIR1bits.TMR1IF = 0;
  1607     0261  1283               	bcf	3,5	;RP0=0, select bank0
  1608     0262  1303               	bcf	3,6	;RP1=0, select bank0
  1609     0263  100C               	bcf	12,0	;volatile
  1610     0264                     l1006:
  1611                           
  1612                           ;hardware.c: 38:     TMR1L = 0xB0;
  1613     0264  30B0               	movlw	176
  1614     0265  008E               	movwf	14	;volatile
  1615     0266                     l1008:
  1616                           
  1617                           ;hardware.c: 39:     TMR1H = 0x3C;
  1618     0266  303C               	movlw	60
  1619     0267  008F               	movwf	15	;volatile
  1620     0268                     l1010:
  1621                           
  1622                           ;hardware.c: 40:     T1CONbits.TMR1ON = 1;
  1623     0268  1410               	bsf	16,0	;volatile
  1624     0269                     l138:
  1625     0269  0008               	return
  1626     026A                     __end_of_initTIMER1module:
  1627                           
  1628                           	psect	text9
  1629     01D6                     __ptext9:	
  1630 ;; *************** function _initADCmodule *****************
  1631 ;; Defined at:
  1632 ;;		line 3 in file "hardware.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 3
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_initHardware
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660     01D6                     _initADCmodule:	
  1661                           ;psect for function _initADCmodule
  1662                           
  1663     01D6                     l980:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _initADCmodule: [wreg+status,2+status,0]
  1666                           
  1667                           
  1668                           ;hardware.c: 5:     TRISAbits.TRISA0 = 1;
  1669     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1670     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1671     01D8  1405               	bsf	5,0	;volatile
  1672                           
  1673                           ;hardware.c: 6:     TRISAbits.TRISA1 = 1;
  1674     01D9  1485               	bsf	5,1	;volatile
  1675                           
  1676                           ;hardware.c: 7:     TRISAbits.TRISA2 = 1;
  1677     01DA  1505               	bsf	5,2	;volatile
  1678                           
  1679                           ;hardware.c: 8:     ANSELbits.ANS0 = 1;
  1680     01DB  1683               	bsf	3,5	;RP0=1, select bank3
  1681     01DC  1703               	bsf	3,6	;RP1=1, select bank3
  1682     01DD  1408               	bsf	8,0	;volatile
  1683                           
  1684                           ;hardware.c: 9:     ANSELbits.ANS1 = 1;
  1685     01DE  1488               	bsf	8,1	;volatile
  1686                           
  1687                           ;hardware.c: 10:     ANSELbits.ANS2 = 1;
  1688     01DF  1508               	bsf	8,2	;volatile
  1689                           
  1690                           ;hardware.c: 12:     ADCON0bits.ADCS0 = 0;
  1691     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1692     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1693     01E2  131F               	bcf	31,6	;volatile
  1694                           
  1695                           ;hardware.c: 13:     ADCON0bits.ADCS1 = 1;
  1696     01E3  179F               	bsf	31,7	;volatile
  1697                           
  1698                           ;hardware.c: 14:     ADCON1bits.VCFG0 = 0;
  1699     01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1700     01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1701     01E6  121F               	bcf	31,4	;volatile
  1702                           
  1703                           ;hardware.c: 15:     ADCON1bits.VCFG1 = 0;
  1704     01E7  129F               	bcf	31,5	;volatile
  1705     01E8                     l982:
  1706                           
  1707                           ;hardware.c: 16:     ADCON0bits.CHS = 0b0000;
  1708     01E8  30C3               	movlw	-61
  1709     01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1710     01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1711     01EB  059F               	andwf	31,f	;volatile
  1712     01EC                     l984:
  1713                           
  1714                           ;hardware.c: 17:     ADCON1bits.ADFM = 1;
  1715     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1716     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1717     01EE  179F               	bsf	31,7	;volatile
  1718     01EF                     l986:
  1719                           
  1720                           ;hardware.c: 18:     ADCON0bits.ADON = 1;
  1721     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1722     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1723     01F1  141F               	bsf	31,0	;volatile
  1724     01F2                     l988:
  1725                           
  1726                           ;hardware.c: 19:     PIE1bits.ADIE = 1;
  1727     01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1728     01F3  1303               	bcf	3,6	;RP1=0, select bank1
  1729     01F4  170C               	bsf	12,6	;volatile
  1730     01F5                     l990:
  1731                           
  1732                           ;hardware.c: 23:     INTCONbits.T0IE = 0;
  1733     01F5  128B               	bcf	11,5	;volatile
  1734     01F6                     l992:
  1735                           
  1736                           ;hardware.c: 24:     OPTION_REGbits.T0CS =0;
  1737     01F6  1281               	bcf	1,5	;volatile
  1738     01F7                     l994:
  1739                           
  1740                           ;hardware.c: 25:     OPTION_REGbits.PSA =1;
  1741     01F7  1581               	bsf	1,3	;volatile
  1742     01F8                     l135:
  1743     01F8  0008               	return
  1744     01F9                     __end_of_initADCmodule:
  1745                           
  1746                           	psect	text10
  1747     0277                     __ptext10:	
  1748 ;; *************** function _create_task *****************
  1749 ;; Defined at:
  1750 ;;		line 10 in file "main.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  ticks_period    2    0[BANK0 ] int 
  1753 ;;  run             1    2[BANK0 ] PTR FTN()void 
  1754 ;;		 -> readHumidity(1), readTemperature(1), readNoise(1), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  to_create       5    5[BANK0 ] volatile struct task
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  5    0[BANK0 ] struct task
  1759 ;; Registers used:
  1760 ;;		wreg
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       5       0       0       0
  1767 ;;      Locals:         0       5       0       0       0
  1768 ;;      Temps:          0       0       0       0       0
  1769 ;;      Totals:         0      10       0       0       0
  1770 ;;Total ram usage:       10 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 3
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780     0277                     _create_task:	
  1781                           ;psect for function _create_task
  1782                           
  1783     0277                     l1014:	
  1784                           ;incstack = 0
  1785                           ; Regs used in _create_task: [wreg]
  1786                           
  1787                           
  1788                           ;main.c: 11:     task_t to_create;;main.c: 12:     to_create.ticks_left = ticks_period;
  1789     0277  1283               	bcf	3,5	;RP0=0, select bank0
  1790     0278  1303               	bcf	3,6	;RP1=0, select bank0
  1791     0279  084F               	movf	create_task@ticks_period+1,w
  1792     027A  00D4               	movwf	create_task@to_create+1	;volatile
  1793     027B  084E               	movf	create_task@ticks_period,w
  1794     027C  00D3               	movwf	create_task@to_create	;volatile
  1795                           
  1796                           ;main.c: 13:     to_create.ticks_period = ticks_period;
  1797     027D  084F               	movf	create_task@ticks_period+1,w
  1798     027E  00D6               	movwf	create_task@to_create+3	;volatile
  1799     027F  084E               	movf	create_task@ticks_period,w
  1800     0280  00D5               	movwf	create_task@to_create+2	;volatile
  1801                           
  1802                           ;main.c: 14:     to_create.run = run;
  1803     0281  0850               	movf	create_task@run,w
  1804     0282  00D7               	movwf	low ((create_task@to_create| 0+4))	;volatile
  1805     0283                     l19:
  1806     0283  0008               	return
  1807     0284                     __end_of_create_task:
  1808                           
  1809                           	psect	text11
  1810     023F                     __ptext11:	
  1811 ;; *************** function ___bmul *****************
  1812 ;; Defined at:
  1813 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  multiplier      1    wreg     unsigned char 
  1816 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1819 ;;  product         1    2[BANK0 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      unsigned char 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       1       0       0       0
  1830 ;;      Locals:         0       2       0       0       0
  1831 ;;      Temps:          0       1       0       0       0
  1832 ;;      Totals:         0       4       0       0       0
  1833 ;;Total ram usage:        4 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 3
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843     023F                     ___bmul:	
  1844                           ;psect for function ___bmul
  1845                           
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1849                           ;___bmul@multiplier stored from wreg
  1850     023F  1283               	bcf	3,5	;RP0=0, select bank0
  1851     0240  1303               	bcf	3,6	;RP1=0, select bank0
  1852     0241  00D1               	movwf	___bmul@multiplier
  1853     0242                     l1088:
  1854     0242  01D0               	clrf	___bmul@product
  1855     0243                     l1090:
  1856     0243  1C51               	btfss	___bmul@multiplier,0
  1857     0244  2A46               	goto	u251
  1858     0245  2A47               	goto	u250
  1859     0246                     u251:
  1860     0246  2A4B               	goto	l1094
  1861     0247                     u250:
  1862     0247                     l1092:
  1863     0247  084E               	movf	___bmul@multiplicand,w
  1864     0248  00CF               	movwf	??___bmul
  1865     0249  084F               	movf	??___bmul,w
  1866     024A  07D0               	addwf	___bmul@product,f
  1867     024B                     l1094:
  1868     024B  1003               	clrc
  1869     024C  0DCE               	rlf	___bmul@multiplicand,f
  1870     024D                     l1096:
  1871     024D  1003               	clrc
  1872     024E  0CD1               	rrf	___bmul@multiplier,f
  1873     024F  0851               	movf	___bmul@multiplier,w
  1874     0250  1D03               	btfss	3,2
  1875     0251  2A53               	goto	u261
  1876     0252  2A54               	goto	u260
  1877     0253                     u261:
  1878     0253  2A43               	goto	l1090
  1879     0254                     u260:
  1880     0254                     l1098:
  1881     0254  0850               	movf	___bmul@product,w
  1882     0255                     l290:
  1883     0255  0008               	return
  1884     0256                     __end_of___bmul:
  1885                           
  1886                           	psect	text12
  1887     01F9                     __ptext12:	
  1888 ;; *************** function _MAIN_ISR *****************
  1889 ;; Defined at:
  1890 ;;		line 17 in file "main.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          4       0       0       0       0
  1907 ;;      Totals:         4       0       0       0       0
  1908 ;;Total ram usage:        4 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 2
  1911 ;; This function calls:
  1912 ;;		_ISR_ADC_lecture_ready
  1913 ;;		_ISR_periodic_interrupt
  1914 ;; This function is called by:
  1915 ;;		Interrupt level 1
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919     01F9                     _MAIN_ISR:	
  1920                           ;psect for function _MAIN_ISR
  1921                           
  1922     01F9                     i1l1102:
  1923                           
  1924                           ;main.c: 18:     if(PIR1bits.TMR1IF == 1) ISR_periodic_interrupt(task_array,3);
  1925     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1926     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1927     01FB  1C0C               	btfss	12,0	;volatile
  1928     01FC  29FE               	goto	u27_21
  1929     01FD  29FF               	goto	u27_20
  1930     01FE                     u27_21:
  1931     01FE  2A08               	goto	i1l24
  1932     01FF                     u27_20:
  1933     01FF                     i1l1104:
  1934     01FF  3003               	movlw	3
  1935     0200  00F0               	movwf	ISR_periodic_interrupt@task_amount
  1936     0201  3026               	movlw	(low (_task_array| 0))& (0+255)
  1937     0202  120A  118A  221C  120A  118A  	fcall	_ISR_periodic_interrupt
  1938     0207  2A11               	goto	i1l27
  1939     0208                     i1l24:	
  1940                           ;main.c: 19:     else if(PIR1bits.ADIF==1) ISR_ADC_lecture_ready();
  1941                           
  1942     0208  1F0C               	btfss	12,6	;volatile
  1943     0209  2A0B               	goto	u28_21
  1944     020A  2A0C               	goto	u28_20
  1945     020B                     u28_21:
  1946     020B  2A11               	goto	i1l27
  1947     020C                     u28_20:
  1948     020C                     i1l1106:
  1949     020C  120A  118A  20E4  120A  118A  	fcall	_ISR_ADC_lecture_ready
  1950     0211                     i1l27:
  1951     0211  087B               	movf	??_MAIN_ISR+3,w
  1952     0212  00FF               	movwf	btemp+1
  1953     0213  087A               	movf	??_MAIN_ISR+2,w
  1954     0214  008A               	movwf	10
  1955     0215  0879               	movf	??_MAIN_ISR+1,w
  1956     0216  0084               	movwf	4
  1957     0217  0E78               	swapf	??_MAIN_ISR,w
  1958     0218  0083               	movwf	3
  1959     0219  0EFE               	swapf	btemp,f
  1960     021A  0E7E               	swapf	btemp,w
  1961     021B  0009               	retfie
  1962     021C                     __end_of_MAIN_ISR:
  1963                           
  1964                           	psect	intentry
  1965     0004                     __pintentry:	
  1966                           ;incstack = 0
  1967                           ; Regs used in _MAIN_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1968                           
  1969     0004                     interrupt_function:
  1970     007E                     saved_w	set	btemp
  1971     0004  00FE               	movwf	btemp
  1972     0005  0E03               	swapf	3,w
  1973     0006  00F8               	movwf	??_MAIN_ISR
  1974     0007  0804               	movf	4,w
  1975     0008  00F9               	movwf	??_MAIN_ISR+1
  1976     0009  080A               	movf	10,w
  1977     000A  00FA               	movwf	??_MAIN_ISR+2
  1978     000B  087F               	movf	btemp+1,w
  1979     000C  00FB               	movwf	??_MAIN_ISR+3
  1980     000D  120A  118A  29F9   	ljmp	_MAIN_ISR
  1981                           
  1982                           	psect	text13
  1983     021C                     __ptext13:	
  1984 ;; *************** function _ISR_periodic_interrupt *****************
  1985 ;; Defined at:
  1986 ;;		line 24 in file "ISR.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  task_array      1    wreg     PTR volatile struct task
  1989 ;;		 -> task_array(40), 
  1990 ;;  task_amount     1    0[COMMON] unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  task_array      1    2[COMMON] PTR volatile struct task
  1993 ;;		 -> task_array(40), 
  1994 ;;  i               1    3[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         1       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0
  2007 ;;      Totals:         4       0       0       0       0
  2008 ;;Total ram usage:        4 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_MAIN_ISR
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017     021C                     _ISR_periodic_interrupt:	
  2018                           ;psect for function _ISR_periodic_interrupt
  2019                           
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _ISR_periodic_interrupt: [wreg-fsr0h+status,2+status,0+btemp+1]
  2023                           ;ISR_periodic_interrupt@task_array stored from wreg
  2024     021C  00F2               	movwf	ISR_periodic_interrupt@task_array
  2025     021D                     i1l1016:
  2026                           
  2027                           ;ISR.c: 26:     PIR1bits.TMR1IF = 0;
  2028     021D  1283               	bcf	3,5	;RP0=0, select bank0
  2029     021E  1303               	bcf	3,6	;RP1=0, select bank0
  2030     021F  100C               	bcf	12,0	;volatile
  2031     0220                     i1l1018:
  2032                           
  2033                           ;ISR.c: 27:     TMR1L = 0xB0;
  2034     0220  30B0               	movlw	176
  2035     0221  008E               	movwf	14	;volatile
  2036                           
  2037                           ;ISR.c: 28:     TMR1H = 0x3C;
  2038     0222  303C               	movlw	60
  2039     0223  008F               	movwf	15	;volatile
  2040     0224                     i1l1020:
  2041                           
  2042                           ;ISR.c: 30:     for(char i = 0; i < task_amount;i++){
  2043     0224  01F3               	clrf	ISR_periodic_interrupt@i
  2044     0225  2A38               	goto	i1l1026
  2045     0226                     i1l1022:
  2046                           
  2047                           ;ISR.c: 31:         task_array->ticks_left--;
  2048     0226  0872               	movf	ISR_periodic_interrupt@task_array,w
  2049     0227  0084               	movwf	4
  2050     0228  30FF               	movlw	255
  2051     0229  1383               	bcf	3,7	;select IRP bank0
  2052     022A  0780               	addwf	0,f
  2053     022B  0F84               	incfsz	4,f
  2054     022C  0800               	movf	0,w
  2055     022D  1803               	skipnc
  2056     022E  0A00               	incf	0,w
  2057     022F  00FF               	movwf	btemp+1
  2058     0230  30FF               	movlw	255
  2059     0231  077F               	addwf	btemp+1,w
  2060     0232  0080               	movwf	0
  2061     0233  0384               	decf	4,f
  2062     0234                     i1l1024:
  2063                           
  2064                           ;ISR.c: 32:     }
  2065     0234  3001               	movlw	1
  2066     0235  00F1               	movwf	??_ISR_periodic_interrupt
  2067     0236  0871               	movf	??_ISR_periodic_interrupt,w
  2068     0237  07F3               	addwf	ISR_periodic_interrupt@i,f
  2069     0238                     i1l1026:
  2070     0238  0870               	movf	ISR_periodic_interrupt@task_amount,w
  2071     0239  0273               	subwf	ISR_periodic_interrupt@i,w
  2072     023A  1C03               	skipc
  2073     023B  2A3D               	goto	u17_21
  2074     023C  2A3E               	goto	u17_20
  2075     023D                     u17_21:
  2076     023D  2A26               	goto	i1l1022
  2077     023E                     u17_20:
  2078     023E                     i1l178:
  2079     023E  0008               	return
  2080     023F                     __end_of_ISR_periodic_interrupt:
  2081                           
  2082                           	psect	text14
  2083     00E4                     __ptext14:	
  2084 ;; *************** function _ISR_ADC_lecture_ready *****************
  2085 ;; Defined at:
  2086 ;;		line 4 in file "ISR.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  lecture         2    6[COMMON] int 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       0       0       0       0
  2101 ;;      Locals:         2       0       0       0       0
  2102 ;;      Temps:          4       0       0       0       0
  2103 ;;      Totals:         6       0       0       0       0
  2104 ;;Total ram usage:        6 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 1
  2107 ;; This function calls:
  2108 ;;		_taskData_get_ADC_CurrentTask
  2109 ;;		_taskData_get_MaxNoise
  2110 ;;		_taskData_set_Humidity
  2111 ;;		_taskData_set_MaxNoise
  2112 ;;		_taskData_set_Temperature
  2113 ;;		i1_taskData_setADC_ready
  2114 ;; This function is called by:
  2115 ;;		_MAIN_ISR
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119     00E4                     _ISR_ADC_lecture_ready:	
  2120                           ;psect for function _ISR_ADC_lecture_ready
  2121                           
  2122     00E4                     i1l1028:	
  2123                           ;incstack = 0
  2124                           ; Regs used in _ISR_ADC_lecture_ready: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2125                           
  2126                           
  2127                           ;ISR.c: 5:     PIR1bits.ADIF=0;
  2128     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2129     00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2130     00E6  130C               	bcf	12,6	;volatile
  2131     00E7                     i1l1030:
  2132                           
  2133                           ;ISR.c: 6:     taskData_setADC_ready(1);
  2134     00E7  3001               	movlw	1
  2135     00E8  120A  118A  22B4  120A  118A  	fcall	i1_taskData_setADC_ready
  2136     00ED                     i1l1032:
  2137                           
  2138                           ;ISR.c: 8:     switch(taskData_get_ADC_CurrentTask()){
  2139     00ED  2945               	goto	i1l1046
  2140     00EE                     i1l1034:
  2141                           
  2142                           ;ISR.c: 10:             taskData_set_Humidity((int)ADRESH << 8 | (int)ADRESL);
  2143     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2144     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  2145     00F0  081E               	movf	30,w	;volatile
  2146     00F1  00F2               	movwf	??_ISR_ADC_lecture_ready
  2147     00F2  01F3               	clrf	??_ISR_ADC_lecture_ready+1
  2148     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2149     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2150     00F5  081E               	movf	30,w	;volatile
  2151     00F6  00F4               	movwf	??_ISR_ADC_lecture_ready+2
  2152     00F7  01F5               	clrf	??_ISR_ADC_lecture_ready+3
  2153     00F8  0874               	movf	??_ISR_ADC_lecture_ready+2,w
  2154     00F9  00F5               	movwf	??_ISR_ADC_lecture_ready+3
  2155     00FA  01F4               	clrf	??_ISR_ADC_lecture_ready+2
  2156     00FB  0872               	movf	??_ISR_ADC_lecture_ready,w
  2157     00FC  0474               	iorwf	??_ISR_ADC_lecture_ready+2,w
  2158     00FD  00F0               	movwf	taskData_set_Humidity@value
  2159     00FE  0873               	movf	??_ISR_ADC_lecture_ready+1,w
  2160     00FF  0475               	iorwf	??_ISR_ADC_lecture_ready+3,w
  2161     0100  00F1               	movwf	taskData_set_Humidity@value+1
  2162     0101  120A  118A  229A  120A  118A  	fcall	_taskData_set_Humidity
  2163                           
  2164                           ;ISR.c: 11:             break;
  2165     0106  295C               	goto	i1l172
  2166     0107                     i1l1036:
  2167                           
  2168                           ;ISR.c: 13:             taskData_set_Temperature((int)ADRESH << 8 | (int)ADRESL);
  2169     0107  1683               	bsf	3,5	;RP0=1, select bank1
  2170     0108  1303               	bcf	3,6	;RP1=0, select bank1
  2171     0109  081E               	movf	30,w	;volatile
  2172     010A  00F2               	movwf	??_ISR_ADC_lecture_ready
  2173     010B  01F3               	clrf	??_ISR_ADC_lecture_ready+1
  2174     010C  1283               	bcf	3,5	;RP0=0, select bank0
  2175     010D  1303               	bcf	3,6	;RP1=0, select bank0
  2176     010E  081E               	movf	30,w	;volatile
  2177     010F  00F4               	movwf	??_ISR_ADC_lecture_ready+2
  2178     0110  01F5               	clrf	??_ISR_ADC_lecture_ready+3
  2179     0111  0874               	movf	??_ISR_ADC_lecture_ready+2,w
  2180     0112  00F5               	movwf	??_ISR_ADC_lecture_ready+3
  2181     0113  01F4               	clrf	??_ISR_ADC_lecture_ready+2
  2182     0114  0872               	movf	??_ISR_ADC_lecture_ready,w
  2183     0115  0474               	iorwf	??_ISR_ADC_lecture_ready+2,w
  2184     0116  00F0               	movwf	taskData_set_Temperature@value
  2185     0117  0873               	movf	??_ISR_ADC_lecture_ready+1,w
  2186     0118  0475               	iorwf	??_ISR_ADC_lecture_ready+3,w
  2187     0119  00F1               	movwf	taskData_set_Temperature@value+1
  2188     011A  120A  118A  228C  120A  118A  	fcall	_taskData_set_Temperature
  2189                           
  2190                           ;ISR.c: 14:             break;
  2191     011F  295C               	goto	i1l172
  2192     0120                     i1l1038:
  2193                           
  2194                           ;ISR.c: 16:             lecture = (int)ADRESH << 8 | (int)ADRESL;
  2195     0120  1283               	bcf	3,5	;RP0=0, select bank0
  2196     0121  1303               	bcf	3,6	;RP1=0, select bank0
  2197     0122  081E               	movf	30,w	;volatile
  2198     0123  00F7               	movwf	ISR_ADC_lecture_ready@lecture+1
  2199     0124  1683               	bsf	3,5	;RP0=1, select bank1
  2200     0125  1303               	bcf	3,6	;RP1=0, select bank1
  2201     0126  081E               	movf	30,w	;volatile
  2202     0127  00F6               	movwf	ISR_ADC_lecture_ready@lecture
  2203     0128                     i1l1040:
  2204                           
  2205                           ;ISR.c: 17:             if(lecture > taskData_get_MaxNoise()){
  2206     0128  120A  118A  22A1  120A  118A  	fcall	_taskData_get_MaxNoise
  2207     012D  0871               	movf	?_taskData_get_MaxNoise+1,w
  2208     012E  3A80               	xorlw	128
  2209     012F  00F2               	movwf	??_ISR_ADC_lecture_ready
  2210     0130  0877               	movf	ISR_ADC_lecture_ready@lecture+1,w
  2211     0131  3A80               	xorlw	128
  2212     0132  0272               	subwf	??_ISR_ADC_lecture_ready,w
  2213     0133  1D03               	skipz
  2214     0134  2937               	goto	u18_25
  2215     0135  0876               	movf	ISR_ADC_lecture_ready@lecture,w
  2216     0136  0270               	subwf	?_taskData_get_MaxNoise,w
  2217     0137                     u18_25:
  2218     0137  1803               	skipnc
  2219     0138  293A               	goto	u18_21
  2220     0139  293B               	goto	u18_20
  2221     013A                     u18_21:
  2222     013A  295C               	goto	i1l172
  2223     013B                     u18_20:
  2224     013B                     i1l1042:
  2225                           
  2226                           ;ISR.c: 18:                 taskData_set_MaxNoise(lecture);
  2227     013B  0877               	movf	ISR_ADC_lecture_ready@lecture+1,w
  2228     013C  00F1               	movwf	taskData_set_MaxNoise@value+1
  2229     013D  0876               	movf	ISR_ADC_lecture_ready@lecture,w
  2230     013E  00F0               	movwf	taskData_set_MaxNoise@value
  2231     013F  120A  118A  2293  120A  118A  	fcall	_taskData_set_MaxNoise
  2232     0144  295C               	goto	i1l172
  2233     0145                     i1l1046:
  2234     0145  120A  118A  22BA  120A  118A  	fcall	_taskData_get_ADC_CurrentTask
  2235     014A  00F2               	movwf	??_ISR_ADC_lecture_ready
  2236     014B  01F3               	clrf	??_ISR_ADC_lecture_ready+1
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ; direct_byte           11     8 (fixed)
  2245                           ; jumptable            260     6 (fixed)
  2246                           ;	Chosen strategy is simple_byte
  2247     014C  0873               	movf	??_ISR_ADC_lecture_ready+1,w
  2248     014D  3A00               	xorlw	0	; case 0
  2249     014E  1903               	skipnz
  2250     014F  2951               	goto	i1l1150
  2251     0150  295C               	goto	i1l172
  2252     0151                     i1l1150:
  2253                           
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 3, Range of values is 0 to 2
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte           10     6 (average)
  2259                           ; direct_byte           17     8 (fixed)
  2260                           ; jumptable            260     6 (fixed)
  2261                           ;	Chosen strategy is simple_byte
  2262     0151  0872               	movf	??_ISR_ADC_lecture_ready,w
  2263     0152  3A00               	xorlw	0	; case 0
  2264     0153  1903               	skipnz
  2265     0154  28EE               	goto	i1l1034
  2266     0155  3A01               	xorlw	1	; case 1
  2267     0156  1903               	skipnz
  2268     0157  2907               	goto	i1l1036
  2269     0158  3A03               	xorlw	3	; case 2
  2270     0159  1903               	skipnz
  2271     015A  2920               	goto	i1l1038
  2272     015B  295C               	goto	i1l172
  2273     015C                     i1l172:
  2274     015C  0008               	return
  2275     015D                     __end_of_ISR_ADC_lecture_ready:
  2276                           
  2277                           	psect	text15
  2278     02B4                     __ptext15:	
  2279 ;; *************** function i1_taskData_setADC_ready *****************
  2280 ;; Defined at:
  2281 ;;		line 12 in file "taskData.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  value           1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  value           1    0[COMMON] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_ISR_ADC_lecture_ready
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308     02B4                     i1_taskData_setADC_ready:	
  2309                           ;psect for function i1_taskData_setADC_ready
  2310                           
  2311                           
  2312                           ;incstack = 0
  2313                           ; Regs used in i1_taskData_setADC_ready: [wreg]
  2314                           ;i1taskData_setADC_ready@value stored from wreg
  2315     02B4  00F0               	movwf	i1taskData_setADC_ready@value
  2316     02B5                     i1l1012:
  2317                           
  2318                           ;taskData.c: 13:     adc_ready = value;
  2319     02B5  0870               	movf	i1taskData_setADC_ready@value,w
  2320     02B6  00FD               	movwf	_adc_ready
  2321     02B7                     i1l53:
  2322     02B7  0008               	return
  2323     02B8                     __end_ofi1_taskData_setADC_ready:
  2324                           
  2325                           	psect	text16
  2326     028C                     __ptext16:	
  2327 ;; *************** function _taskData_set_Temperature *****************
  2328 ;; Defined at:
  2329 ;;		line 24 in file "taskData.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  value           2    0[COMMON] int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         2       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         2       0       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_ISR_ADC_lecture_ready
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     028C                     _taskData_set_Temperature:	
  2357                           ;psect for function _taskData_set_Temperature
  2358                           
  2359     028C                     i1l972:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _taskData_set_Temperature: [wreg]
  2362                           
  2363                           
  2364                           ;taskData.c: 25:     temperature = value;
  2365     028C  0871               	movf	taskData_set_Temperature@value+1,w
  2366     028D  1283               	bcf	3,5	;RP0=0, select bank0
  2367     028E  1303               	bcf	3,6	;RP1=0, select bank0
  2368     028F  00A3               	movwf	_temperature+1
  2369     0290  0870               	movf	taskData_set_Temperature@value,w
  2370     0291  00A2               	movwf	_temperature
  2371     0292                     i1l65:
  2372     0292  0008               	return
  2373     0293                     __end_of_taskData_set_Temperature:
  2374                           
  2375                           	psect	text17
  2376     0293                     __ptext17:	
  2377 ;; *************** function _taskData_set_MaxNoise *****************
  2378 ;; Defined at:
  2379 ;;		line 30 in file "taskData.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  value           2    0[COMMON] int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         2       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         2       0       0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_ISR_ADC_lecture_ready
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406     0293                     _taskData_set_MaxNoise:	
  2407                           ;psect for function _taskData_set_MaxNoise
  2408                           
  2409     0293                     i1l978:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _taskData_set_MaxNoise: [wreg]
  2412                           
  2413                           
  2414                           ;taskData.c: 31:     max_noise = value;
  2415     0293  0871               	movf	taskData_set_MaxNoise@value+1,w
  2416     0294  1283               	bcf	3,5	;RP0=0, select bank0
  2417     0295  1303               	bcf	3,6	;RP1=0, select bank0
  2418     0296  00A1               	movwf	_max_noise+1
  2419     0297  0870               	movf	taskData_set_MaxNoise@value,w
  2420     0298  00A0               	movwf	_max_noise
  2421     0299                     i1l71:
  2422     0299  0008               	return
  2423     029A                     __end_of_taskData_set_MaxNoise:
  2424                           
  2425                           	psect	text18
  2426     029A                     __ptext18:	
  2427 ;; *************** function _taskData_set_Humidity *****************
  2428 ;; Defined at:
  2429 ;;		line 21 in file "taskData.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  value           2    0[COMMON] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         2       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         2       0       0       0       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_ISR_ADC_lecture_ready
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456     029A                     _taskData_set_Humidity:	
  2457                           ;psect for function _taskData_set_Humidity
  2458                           
  2459     029A                     i1l970:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _taskData_set_Humidity: [wreg]
  2462                           
  2463                           
  2464                           ;taskData.c: 22:     humidity = value;
  2465     029A  0871               	movf	taskData_set_Humidity@value+1,w
  2466     029B  1283               	bcf	3,5	;RP0=0, select bank0
  2467     029C  1303               	bcf	3,6	;RP1=0, select bank0
  2468     029D  00A5               	movwf	_humidity+1
  2469     029E  0870               	movf	taskData_set_Humidity@value,w
  2470     029F  00A4               	movwf	_humidity
  2471     02A0                     i1l62:
  2472     02A0  0008               	return
  2473     02A1                     __end_of_taskData_set_Humidity:
  2474                           
  2475                           	psect	text19
  2476     02A1                     __ptext19:	
  2477 ;; *************** function _taskData_get_MaxNoise *****************
  2478 ;; Defined at:
  2479 ;;		line 27 in file "taskData.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2    0[COMMON] int 
  2486 ;; Registers used:
  2487 ;;		wreg
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         2       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0
  2496 ;;      Totals:         2       0       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_ISR_ADC_lecture_ready
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506     02A1                     _taskData_get_MaxNoise:	
  2507                           ;psect for function _taskData_get_MaxNoise
  2508                           
  2509     02A1                     i1l974:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _taskData_get_MaxNoise: [wreg]
  2512                           
  2513                           
  2514                           ;taskData.c: 28:     return max_noise;
  2515     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2516     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2517     02A3  0821               	movf	_max_noise+1,w
  2518     02A4  00F1               	movwf	?_taskData_get_MaxNoise+1
  2519     02A5  0820               	movf	_max_noise,w
  2520     02A6  00F0               	movwf	?_taskData_get_MaxNoise
  2521     02A7                     i1l68:
  2522     02A7  0008               	return
  2523     02A8                     __end_of_taskData_get_MaxNoise:
  2524                           
  2525                           	psect	text20
  2526     02BA                     __ptext20:	
  2527 ;; *************** function _taskData_get_ADC_CurrentTask *****************
  2528 ;; Defined at:
  2529 ;;		line 18 in file "taskData.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_ISR_ADC_lecture_ready
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556     02BA                     _taskData_get_ADC_CurrentTask:	
  2557                           ;psect for function _taskData_get_ADC_CurrentTask
  2558                           
  2559     02BA                     i1l778:	
  2560                           ;incstack = 0
  2561                           ; Regs used in _taskData_get_ADC_CurrentTask: [wreg]
  2562                           
  2563                           
  2564                           ;taskData.c: 19:     return adc_current_task;
  2565     02BA  087C               	movf	_adc_current_task,w
  2566     02BB                     i1l59:
  2567     02BB  0008               	return
  2568     02BC                     __end_of_taskData_get_ADC_CurrentTask:
  2569     0006                     
  2570                           	psect	functab
  2571     0027                     __pfunctab:
  2572     0027                     __fptable:
  2573     0027                     fptable:
  2574     0027  00FF               	movwf	(btemp+1)& (0+127)
  2575     0028  3000               	movlw	high fptable
  2576     0029  008A               	movwf	10
  2577     002A  087F               	movf	(btemp+1)& (0+127),w
  2578     002B  0782               	addwf	2,f
  2579     002C                     fpbase:
  2580     002C  282C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2581     002D                     fp__readTemperature:
  2582     002D  120A  118A  2986   	ljmp	_readTemperature
  2583     0030                     fp__readNoise:
  2584     0030  120A  118A  295D   	ljmp	_readNoise
  2585     0033                     fp__readHumidity:
  2586     0033  120A  118A  29AF   	ljmp	_readHumidity
  2587     0036                     __end_of__fptable:
  2588     007E                     btemp	set	126	;btemp
  2589     007E                     wtemp0	set	126
  2590                           
  2591                           	psect	idloc
  2592                           
  2593                           ;Config register IDLOC0 @ 0x2000
  2594                           ;	unspecified, using default values
  2595     2000                     	org	8192
  2596     2000  3FFF               	dw	16383
  2597                           
  2598                           ;Config register IDLOC1 @ 0x2001
  2599                           ;	unspecified, using default values
  2600     2001                     	org	8193
  2601     2001  3FFF               	dw	16383
  2602                           
  2603                           ;Config register IDLOC2 @ 0x2002
  2604                           ;	unspecified, using default values
  2605     2002                     	org	8194
  2606     2002  3FFF               	dw	16383
  2607                           
  2608                           ;Config register IDLOC3 @ 0x2003
  2609                           ;	unspecified, using default values
  2610     2003                     	org	8195
  2611     2003  3FFF               	dw	16383
  2612                           
  2613                           	psect	config
  2614                           
  2615                           ;Config register CONFIG1 @ 0x2007
  2616                           ;	unspecified, using default values
  2617                           ;	Oscillator Selection bits
  2618                           ;	FOSC = 0x7, unprogrammed default
  2619                           ;	Watchdog Timer Enable bit
  2620                           ;	WDTE = 0x1, unprogrammed default
  2621                           ;	Power-up Timer Enable bit
  2622                           ;	PWRTE = 0x1, unprogrammed default
  2623                           ;	RE3/MCLR pin function select bit
  2624                           ;	MCLRE = 0x1, unprogrammed default
  2625                           ;	Code Protection bit
  2626                           ;	CP = 0x1, unprogrammed default
  2627                           ;	Data Code Protection bit
  2628                           ;	CPD = 0x1, unprogrammed default
  2629                           ;	Brown Out Reset Selection bits
  2630                           ;	BOREN = 0x3, unprogrammed default
  2631                           ;	Internal External Switchover bit
  2632                           ;	IESO = 0x1, unprogrammed default
  2633                           ;	Fail-Safe Clock Monitor Enabled bit
  2634                           ;	FCMEN = 0x1, unprogrammed default
  2635                           ;	Low Voltage Programming Enable bit
  2636                           ;	LVP = 0x1, unprogrammed default
  2637                           ;	In-Circuit Debugger Mode bit
  2638                           ;	DEBUG = 0x1, unprogrammed default
  2639     2007                     	org	8199
  2640     2007  3FFF               	dw	16383
  2641                           
  2642                           ;Config register CONFIG2 @ 0x2008
  2643                           ;	unspecified, using default values
  2644                           ;	Brown-out Reset Selection bit
  2645                           ;	BOR4V = 0x1, unprogrammed default
  2646                           ;	Flash Program Memory Self Write Enable bits
  2647                           ;	WRT = 0x3, unprogrammed default
  2648     2008                     	org	8200
  2649     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     15      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    task_array.run	PTR FTN()void  size(1) Largest target is 0

    S497task$run	PTR FTN()void  size(1) Largest target is 0

    ISR_periodic_interrupt@task_array.run	PTR FTN()void  size(1) Largest target is 0

    ISR_periodic_interrupt@task_array	PTR volatile struct task size(1) Largest target is 40
		 -> task_array(BANK0[40]), 

    task_array.run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    create_task@run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    S23task$run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 

    to_create.run	PTR FTN()void  size(1) Largest target is 1
		 -> readHumidity(), readTemperature(), readNoise(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _MAIN_ISR in COMMON

    _MAIN_ISR->_ISR_ADC_lecture_ready
    _ISR_ADC_lecture_ready->_taskData_get_MaxNoise
    _ISR_ADC_lecture_ready->_taskData_set_Humidity
    _ISR_ADC_lecture_ready->_taskData_set_MaxNoise
    _ISR_ADC_lecture_ready->_taskData_set_Temperature

Critical Paths under _main in BANK0

    _main->_create_task
    _readTemperature->_taskData_setADC_ready
    _readTemperature->_taskData_set_ADC_CurrentTask
    _readNoise->_taskData_setADC_ready
    _readNoise->_taskData_set_ADC_CurrentTask
    _readHumidity->_taskData_setADC_ready
    _readHumidity->_taskData_set_ADC_CurrentTask

Critical Paths under _MAIN_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _MAIN_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MAIN_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MAIN_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     937
                                             10 BANK0      5     5      0
                             ___bmul
                        _create_task
                       _initHardware
                       _readHumidity *
                          _readNoise *
                    _readTemperature *
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      0     0      0      44
              _taskData_getADC_ready
              _taskData_setADC_ready
       _taskData_set_ADC_CurrentTask
 ---------------------------------------------------------------------------------
 (1) _readNoise                                            0     0      0      44
              _taskData_getADC_ready
              _taskData_setADC_ready
       _taskData_set_ADC_CurrentTask
 ---------------------------------------------------------------------------------
 (1) _readHumidity                                         0     0      0      44
              _taskData_getADC_ready
              _taskData_setADC_ready
       _taskData_set_ADC_CurrentTask
 ---------------------------------------------------------------------------------
 (2) _taskData_set_ADC_CurrentTask                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _taskData_setADC_ready                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _taskData_getADC_ready                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
                      _initADCmodule
                   _initTIMER1module
 ---------------------------------------------------------------------------------
 (2) _initTIMER1module                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADCmodule                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _create_task                                         10     5      5     571
                                              0 BANK0     10     5      5
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     144
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _MAIN_ISR                                             4     4      0     539
                                              8 COMMON     4     4      0
              _ISR_ADC_lecture_ready
             _ISR_periodic_interrupt
 ---------------------------------------------------------------------------------
 (4) _ISR_periodic_interrupt                               4     3      1     177
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _ISR_ADC_lecture_ready                                6     6      0     362
                                              2 COMMON     6     6      0
       _taskData_get_ADC_CurrentTask
              _taskData_get_MaxNoise
              _taskData_set_Humidity
              _taskData_set_MaxNoise
           _taskData_set_Temperature
            i1_taskData_setADC_ready
 ---------------------------------------------------------------------------------
 (5) i1_taskData_setADC_ready                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _taskData_set_Temperature                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_set_MaxNoise                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_set_Humidity                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_get_MaxNoise                                2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _taskData_get_ADC_CurrentTask                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _create_task
   _initHardware
     _initADCmodule
     _initTIMER1module
   _readHumidity *
     _taskData_getADC_ready
     _taskData_setADC_ready
     _taskData_set_ADC_CurrentTask
   _readNoise *
     _taskData_getADC_ready
     _taskData_setADC_ready
     _taskData_set_ADC_CurrentTask
   _readTemperature *
     _taskData_getADC_ready
     _taskData_setADC_ready
     _taskData_set_ADC_CurrentTask

 _MAIN_ISR (ROOT)
   _ISR_ADC_lecture_ready
     _taskData_get_ADC_CurrentTask
     _taskData_get_MaxNoise
     _taskData_set_Humidity
     _taskData_set_MaxNoise
     _taskData_set_Temperature
     i1_taskData_setADC_ready
   _ISR_periodic_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec  5 20:35:40 2022

                                   pc 0002                 _taskData_getADC_ready 02B8  
                      ___bmul@product 0050                                    l50 02B9  
                                  l19 0283                                    l53 02B3  
                                  l56 02AD                          fp__readNoise 0030  
                                  l91 01D2                                    l92 01D5  
                                  l89 01CE                                    l98 01A7  
                                  fsr 0004                                   l100 01AB  
                                 l101 01AE                                   l110 0185  
                                 l107 017E                                   l141 0276  
                                 l109 0182                                   l135 01F8  
                                 l138 0269                                   l290 0255  
                                 l962 02B8                                   l980 01D6  
                                 l990 01F5                                   l982 01E8  
                                 l966 02B1                                   l992 01F6  
                                 l984 01EC                                   l968 02AB  
                                 l994 01F7                                   l986 01EF  
                                 l988 01F2                                   l996 0256  
                                 l998 025B                                   u200 01D2  
                                 u201 01D1                                   u210 0196  
                                 u211 0195                                   u220 01AB  
                                 u300 0092                                   u221 01AA  
                                 u230 016D                                   u310 00C1  
                                 u231 016C                                   u311 00C0  
                                 u240 0182                                   u320 00E0  
                                 u241 0181                                   u321 00DF  
                                 u250 0247                                   u251 0246  
                                 u315 00BD                                   u260 0254  
                                 u261 0253                                   u190 01BD  
                                 u191 01BC                                   u290 006F  
      __end_of_ISR_periodic_interrupt 023F                      _initTIMER1module 0256  
                                 fsr0 0004                                   indf 0000  
                                l1000 025D                                  l1010 0268  
                                l1002 025E                                  l1004 0261  
                                l1014 0277                                  l1006 0264  
                                l1110 003B                                  l1008 0266  
                                l1112 005B                                  l1122 00A2  
                                l1114 007E                                  l1052 026A  
                                l1060 01B3                                  l1124 00C1  
                                l1116 00A1                                  l1108 0036  
                                l1054 0274                                  l1070 018C  
                                l1062 01BD                                  l1126 00D4  
                                l1056 0275                                  l1072 0196  
                                l1080 0163                                  l1064 01C9  
                                l1128 00DA                                  l1090 0243  
                                l1074 01A2                                  l1082 016D  
                                l1066 01CA                                  l1058 01AF  
                                l1092 0247                                  l1076 01A3  
                                l1068 0186                                  l1084 0179  
                                l1094 024B                                  l1086 017A  
                                l1078 015D                                  l1096 024D  
                                l1088 0242                                  l1098 0254  
                                i1l24 0208                                  i1l27 0211  
                                i1l53 02B7                                  i1l62 02A0  
                                i1l71 0299                                  i1l65 0292  
                                i1l59 02BB                                  i1l68 02A7  
                                _TMR0 0001                                  _main 0036  
                      create_task@run 0050                                  btemp 007E  
                                start 0010                         _initADCmodule 01D6  
                   ___bmul@multiplier 0051                ?_ISR_ADC_lecture_ready 0070  
       __end_of_taskData_setADC_ready 02B4                      __end_of_MAIN_ISR 021C  
                     fp__readHumidity 0033                                 ?_main 0070  
                               i1l172 015C                                 i1l178 023E  
                               i1l778 02BA                                 i1l970 029A  
                               i1l972 028C                                 i1l974 02A1  
                               i1l978 0293                                 u17_20 023E  
                               u17_21 023D                                 _TMR1H 000F  
                               _TMR1L 000E                                 u18_20 013B  
                               u18_21 013A                                 u18_25 0137  
                               u27_20 01FF                                 u27_21 01FE  
                               u28_20 020C                                 u28_21 020B  
                               main@i 005C                                 fpbase 002C  
                               pclath 000A                                 status 0003  
                               wtemp0 007E                        ?_initADCmodule 0070  
                       ?_initHardware 0070                       __initialization 0013  
              ?_taskData_getADC_ready 0070                          __end_of_main 00E4  
                              ??_main 0058                       _readTemperature 0186  
                       ?_readHumidity 0070                                _ADRESH 001E  
                              _ADRESL 009E                                i1l1012 02B5  
                              i1l1020 0224                                i1l1030 00E7  
                              i1l1022 0226                                i1l1102 01F9  
                              i1l1040 0128                                i1l1032 00ED  
                              i1l1024 0234                                i1l1016 021D  
                              i1l1104 01FF                                i1l1042 013B  
                              i1l1034 00EE                                i1l1026 0238  
                              i1l1018 0220                                i1l1106 020C  
                              i1l1036 0107                                i1l1028 00E4  
                              i1l1150 0151                                i1l1038 0120  
                              i1l1046 0145                      __end_of__fptable 0036  
               _taskData_get_MaxNoise 02A1                        ??_initHardware 004E  
          taskData_set_Humidity@value 0070            ??_taskData_set_Temperature 0072  
                              ___bmul 023F                                fptable 0027  
                        __pdataCOMMON 007D                                fptotal 0006  
                      ??_readHumidity 004F                                saved_w 007E  
                           ?_MAIN_ISR 0070               __end_of__initialization 0023  
                     ??_initADCmodule 004E         __end_of_taskData_set_MaxNoise 029A  
            __end_of_initTIMER1module 026A                   ___bmul@multiplicand 004E  
       __end_of_taskData_set_Humidity 02A1                        __pcstackCOMMON 0070  
             i1_taskData_setADC_ready 02B4               __end_of_readTemperature 01AF  
    ISR_periodic_interrupt@task_array 0072                        _OPTION_REGbits 0081  
   taskData_set_ADC_CurrentTask@value 004E                            __pbssBANK0 0020  
                          ??_MAIN_ISR 0078                ?_taskData_get_MaxNoise 0070  
             ??_ISR_ADC_lecture_ready 0072                            __pmaintext 0036  
                             ?___bmul 004E                            __pintentry 0004  
                __end_of_initHardware 0277               ??_taskData_getADC_ready 004E  
    __end_of_taskData_set_Temperature 0293             ??i1_taskData_setADC_ready 0070  
        ISR_ADC_lecture_ready@lecture 0076                  __end_of_readHumidity 01D6  
             ISR_periodic_interrupt@i 0073                 _taskData_setADC_ready 02AE  
                           _ANSELbits 0188                      ?_readTemperature 0070  
                             __ptext1 01AF                               __ptext2 015D  
                             __ptext3 0186                               __ptext4 02A8  
                             __ptext5 02AE                               __ptext6 02B8  
                             __ptext7 026A                               __ptext8 0256  
                             __ptext9 01D6                             _T1CONbits 0010  
                   __end_of_readNoise 0186                               clrloop0 0285  
                end_of_initialization 0023                            _task_array 0026  
            ??_ISR_periodic_interrupt 0071                             _TRISAbits 0085  
                create_task@to_create 0053            taskData_set_MaxNoise@value 0070  
                       ??_create_task 0053                     ?_initTIMER1module 0070  
                  ??_initTIMER1module 004E                ?_taskData_setADC_ready 0070  
                      __end_of___bmul 0256                         __pidataCOMMON 02BC  
                 start_initialization 0013             ?_taskData_set_Temperature 0070  
             ??_taskData_get_MaxNoise 0072     ISR_periodic_interrupt@task_amount 0070  
               __end_of_initADCmodule 01F9                 _taskData_set_MaxNoise 0293  
       __end_of_ISR_ADC_lecture_ready 015D                          _initHardware 026A  
                 __end_of_create_task 0284                              ??___bmul 004F  
               _taskData_set_Humidity 029A                      _adc_current_task 007C  
                         __pbssCOMMON 007C                             ___latbits 0002  
                       __pcstackBANK0 004E                          _readHumidity 01AF  
                   __size_of__fptable 000F                             _adc_ready 007D  
       __end_of_taskData_getADC_ready 02BA                             __pfunctab 0027  
                           _readNoise 015D                             _max_noise 0020  
              _ISR_periodic_interrupt 021C                              _MAIN_ISR 01F9  
                   interrupt_function 0004                           _create_task 0277  
                           clear_ram0 0284                              _PIE1bits 008C  
              ?_taskData_set_MaxNoise 0070                              _PIR1bits 000C  
              ?_taskData_set_Humidity 0070                            _ADCON0bits 001F  
                          _ADCON1bits 009F            taskData_setADC_ready@value 004E  
__end_of_taskData_get_ADC_CurrentTask 02BC          _taskData_get_ADC_CurrentTask 02BA  
__end_of_taskData_set_ADC_CurrentTask 02AE          _taskData_set_ADC_CurrentTask 02A8  
                  fp__readTemperature 002D                            ?_readNoise 0070  
            ?i1_taskData_setADC_ready 0070               ??_taskData_setADC_ready 004E  
       taskData_set_Temperature@value 0070                              __fptable 0027  
                            __ptext10 0277                              __ptext11 023F  
                            __ptext20 02BA                              __ptext12 01F9  
                            __ptext13 021C                              __ptext14 00E4  
                            __ptext15 02B4                              __ptext16 028C  
                            __ptext17 0293                              __ptext18 029A  
                            __ptext19 02A1         ?_taskData_get_ADC_CurrentTask 0070  
       ?_taskData_set_ADC_CurrentTask 0070         __end_of_taskData_get_MaxNoise 02A8  
                            _humidity 0024                            _INTCONbits 000B  
     __end_ofi1_taskData_setADC_ready 02B8                           ??_readNoise 004F  
                            intlevel1 0027                     ??_readTemperature 004F  
               _ISR_ADC_lecture_ready 00E4              _taskData_set_Temperature 028C  
                         _temperature 0022          i1taskData_setADC_ready@value 0070  
             ?_ISR_periodic_interrupt 0070               create_task@ticks_period 004E  
             ??_taskData_set_MaxNoise 0072                          ?_create_task 004E  
      ??_taskData_get_ADC_CurrentTask 0070        ??_taskData_set_ADC_CurrentTask 004E  
             ??_taskData_set_Humidity 0072  
